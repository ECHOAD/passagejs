/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { UseQueryOptions } from "@tanstack/react-query";
import { ConfigResponse } from "./Minter.types";
import { MinterQueryClient } from "./Minter.client";
export interface MinterReactQuery<TResponse, TData = TResponse> {
    client: MinterQueryClient;
    options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface MinterMintCountQuery<TData> extends MinterReactQuery<MintCountResponse, TData> {
    args: {
        address: string;
    };
}
export declare function useMinterMintCountQuery<TData = MintCountResponse>({ client, args, options }: MinterMintCountQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMintPriceQuery<TData> extends MinterReactQuery<MintPriceResponse, TData> {
}
export declare function useMinterMintPriceQuery<TData = MintPriceResponse>({ client, options }: MinterMintPriceQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterStartTimeQuery<TData> extends MinterReactQuery<StartTimeResponse, TData> {
}
export declare function useMinterStartTimeQuery<TData = StartTimeResponse>({ client, options }: MinterStartTimeQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMintableNumTokensQuery<TData> extends MinterReactQuery<MintableNumTokensResponse, TData> {
}
export declare function useMinterMintableNumTokensQuery<TData = MintableNumTokensResponse>({ client, options }: MinterMintableNumTokensQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterConfigQuery<TData> extends MinterReactQuery<ConfigResponse, TData> {
}
export declare function useMinterConfigQuery<TData = ConfigResponse>({ client, options }: MinterConfigQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
