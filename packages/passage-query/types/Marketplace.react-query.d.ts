/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { UseQueryOptions } from "@tanstack/react-query";
import { MarketplaceQueryClient } from "./Marketplace.client";
export interface MarketplaceReactQuery<TResponse, TData = TResponse> {
    client: MarketplaceQueryClient;
    options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface MarketplaceListTokensOnSaleQuery<TData> extends MarketplaceReactQuery<ListTokensOnSaleResponse, TData> {
    args: {
        limit?: number;
        startAfter?: string;
    };
}
export declare function useMarketplaceListTokensOnSaleQuery<TData = ListTokensOnSaleResponse>({ client, args, options }: MarketplaceListTokensOnSaleQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MarketplaceListTokensQuery<TData> extends MarketplaceReactQuery<ListTokensResponse, TData> {
    args: {
        ids: string[];
    };
}
export declare function useMarketplaceListTokensQuery<TData = ListTokensResponse>({ client, args, options }: MarketplaceListTokensQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MarketplaceRangeTokensQuery<TData> extends MarketplaceReactQuery<RangeTokensResponse, TData> {
    args: {
        limit?: number;
        startAfter?: string;
    };
}
export declare function useMarketplaceRangeTokensQuery<TData = RangeTokensResponse>({ client, args, options }: MarketplaceRangeTokensQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MarketplaceTokenQuery<TData> extends MarketplaceReactQuery<TokenResponse, TData> {
    args: {
        id: string;
    };
}
export declare function useMarketplaceTokenQuery<TData = TokenResponse>({ client, args, options }: MarketplaceTokenQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MarketplaceConfigQuery<TData> extends MarketplaceReactQuery<ConfigResponse, TData> {
}
export declare function useMarketplaceConfigQuery<TData = ConfigResponse>({ client, options }: MarketplaceConfigQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
