/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { UseQueryOptions } from "@tanstack/react-query";
import { ConfigResponse } from "./MinterMetadataOnChain.types";
import { MinterMetadataOnChainQueryClient } from "./MinterMetadataOnChain.client";
export interface MinterMetadataOnChainReactQuery<TResponse, TData = TResponse> {
    client: MinterMetadataOnChainQueryClient;
    options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface MinterMetadataOnChainTokenMintsQuery<TData> extends MinterMetadataOnChainReactQuery<TokenMintsResponse, TData> {
    args: {
        descending?: boolean;
        filterMinted?: boolean;
        limit?: number;
        startAfter?: number;
    };
}
export declare function useMinterMetadataOnChainTokenMintsQuery<TData = TokenMintsResponse>({ client, args, options }: MinterMetadataOnChainTokenMintsQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainTokenMintQuery<TData> extends MinterMetadataOnChainReactQuery<TokenMintResponse, TData> {
    args: {
        tokenId: number;
    };
}
export declare function useMinterMetadataOnChainTokenMintQuery<TData = TokenMintResponse>({ client, args, options }: MinterMetadataOnChainTokenMintQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainMintCountQuery<TData> extends MinterMetadataOnChainReactQuery<MintCountResponse, TData> {
    args: {
        address: string;
    };
}
export declare function useMinterMetadataOnChainMintCountQuery<TData = MintCountResponse>({ client, args, options }: MinterMetadataOnChainMintCountQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainMintPriceQuery<TData> extends MinterMetadataOnChainReactQuery<MintPriceResponse, TData> {
}
export declare function useMinterMetadataOnChainMintPriceQuery<TData = MintPriceResponse>({ client, options }: MinterMetadataOnChainMintPriceQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainStartTimeQuery<TData> extends MinterMetadataOnChainReactQuery<StartTimeResponse, TData> {
}
export declare function useMinterMetadataOnChainStartTimeQuery<TData = StartTimeResponse>({ client, options }: MinterMetadataOnChainStartTimeQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainNumRemainingQuery<TData> extends MinterMetadataOnChainReactQuery<NumRemainingResponse, TData> {
}
export declare function useMinterMetadataOnChainNumRemainingQuery<TData = NumRemainingResponse>({ client, options }: MinterMetadataOnChainNumRemainingQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainNumMintedQuery<TData> extends MinterMetadataOnChainReactQuery<NumMintedResponse, TData> {
}
export declare function useMinterMetadataOnChainNumMintedQuery<TData = NumMintedResponse>({ client, options }: MinterMetadataOnChainNumMintedQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface MinterMetadataOnChainConfigQuery<TData> extends MinterMetadataOnChainReactQuery<ConfigResponse, TData> {
}
export declare function useMinterMetadataOnChainConfigQuery<TData = ConfigResponse>({ client, options }: MinterMetadataOnChainConfigQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
