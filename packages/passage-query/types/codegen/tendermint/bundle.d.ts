import * as _81 from "./abci/types";
import * as _82 from "./crypto/keys";
import * as _83 from "./crypto/proof";
import * as _84 from "./libs/bits/types";
import * as _85 from "./p2p/types";
import * as _86 from "./types/block";
import * as _87 from "./types/evidence";
import * as _88 from "./types/params";
import * as _89 from "./types/types";
import * as _90 from "./types/validator";
import * as _91 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _81.CheckTxType;
        checkTxTypeToJSON(object: _81.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _81.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _81.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _81.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _81.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _81.EvidenceType;
        evidenceTypeToJSON(object: _81.EvidenceType): string;
        CheckTxType: typeof _81.CheckTxType;
        CheckTxTypeSDKType: typeof _81.CheckTxType;
        CheckTxTypeAmino: typeof _81.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _81.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _81.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _81.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _81.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _81.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _81.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _81.EvidenceType;
        EvidenceTypeSDKType: typeof _81.EvidenceType;
        EvidenceTypeAmino: typeof _81.EvidenceType;
        Request: {
            typeUrl: string;
            is(o: any): o is _81.Request;
            isSDK(o: any): o is _81.RequestSDKType;
            isAmino(o: any): o is _81.RequestAmino;
            encode(message: _81.Request, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.Request;
            fromPartial(object: import("../helpers").DeepPartial<_81.Request>): _81.Request;
            fromAmino(object: _81.RequestAmino): _81.Request;
            toAmino(message: _81.Request): _81.RequestAmino;
            fromAminoMsg(object: _81.RequestAminoMsg): _81.Request;
            fromProtoMsg(message: _81.RequestProtoMsg): _81.Request;
            toProto(message: _81.Request): Uint8Array;
            toProtoMsg(message: _81.Request): _81.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            is(o: any): o is _81.RequestEcho;
            isSDK(o: any): o is _81.RequestEchoSDKType;
            isAmino(o: any): o is _81.RequestEchoAmino;
            encode(message: _81.RequestEcho, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestEcho;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestEcho>): _81.RequestEcho;
            fromAmino(object: _81.RequestEchoAmino): _81.RequestEcho;
            toAmino(message: _81.RequestEcho): _81.RequestEchoAmino;
            fromAminoMsg(object: _81.RequestEchoAminoMsg): _81.RequestEcho;
            fromProtoMsg(message: _81.RequestEchoProtoMsg): _81.RequestEcho;
            toProto(message: _81.RequestEcho): Uint8Array;
            toProtoMsg(message: _81.RequestEcho): _81.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            is(o: any): o is _81.RequestFlush;
            isSDK(o: any): o is _81.RequestFlushSDKType;
            isAmino(o: any): o is _81.RequestFlushAmino;
            encode(_: _81.RequestFlush, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestFlush;
            fromPartial(_: import("../helpers").DeepPartial<_81.RequestFlush>): _81.RequestFlush;
            fromAmino(_: _81.RequestFlushAmino): _81.RequestFlush;
            toAmino(_: _81.RequestFlush): _81.RequestFlushAmino;
            fromAminoMsg(object: _81.RequestFlushAminoMsg): _81.RequestFlush;
            fromProtoMsg(message: _81.RequestFlushProtoMsg): _81.RequestFlush;
            toProto(message: _81.RequestFlush): Uint8Array;
            toProtoMsg(message: _81.RequestFlush): _81.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            is(o: any): o is _81.RequestInfo;
            isSDK(o: any): o is _81.RequestInfoSDKType;
            isAmino(o: any): o is _81.RequestInfoAmino;
            encode(message: _81.RequestInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestInfo;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestInfo>): _81.RequestInfo;
            fromAmino(object: _81.RequestInfoAmino): _81.RequestInfo;
            toAmino(message: _81.RequestInfo): _81.RequestInfoAmino;
            fromAminoMsg(object: _81.RequestInfoAminoMsg): _81.RequestInfo;
            fromProtoMsg(message: _81.RequestInfoProtoMsg): _81.RequestInfo;
            toProto(message: _81.RequestInfo): Uint8Array;
            toProtoMsg(message: _81.RequestInfo): _81.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            is(o: any): o is _81.RequestSetOption;
            isSDK(o: any): o is _81.RequestSetOptionSDKType;
            isAmino(o: any): o is _81.RequestSetOptionAmino;
            encode(message: _81.RequestSetOption, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestSetOption;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestSetOption>): _81.RequestSetOption;
            fromAmino(object: _81.RequestSetOptionAmino): _81.RequestSetOption;
            toAmino(message: _81.RequestSetOption): _81.RequestSetOptionAmino;
            fromAminoMsg(object: _81.RequestSetOptionAminoMsg): _81.RequestSetOption;
            fromProtoMsg(message: _81.RequestSetOptionProtoMsg): _81.RequestSetOption;
            toProto(message: _81.RequestSetOption): Uint8Array;
            toProtoMsg(message: _81.RequestSetOption): _81.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            is(o: any): o is _81.RequestInitChain;
            isSDK(o: any): o is _81.RequestInitChainSDKType;
            isAmino(o: any): o is _81.RequestInitChainAmino;
            encode(message: _81.RequestInitChain, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestInitChain;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestInitChain>): _81.RequestInitChain;
            fromAmino(object: _81.RequestInitChainAmino): _81.RequestInitChain;
            toAmino(message: _81.RequestInitChain): _81.RequestInitChainAmino;
            fromAminoMsg(object: _81.RequestInitChainAminoMsg): _81.RequestInitChain;
            fromProtoMsg(message: _81.RequestInitChainProtoMsg): _81.RequestInitChain;
            toProto(message: _81.RequestInitChain): Uint8Array;
            toProtoMsg(message: _81.RequestInitChain): _81.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            is(o: any): o is _81.RequestQuery;
            isSDK(o: any): o is _81.RequestQuerySDKType;
            isAmino(o: any): o is _81.RequestQueryAmino;
            encode(message: _81.RequestQuery, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestQuery;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestQuery>): _81.RequestQuery;
            fromAmino(object: _81.RequestQueryAmino): _81.RequestQuery;
            toAmino(message: _81.RequestQuery): _81.RequestQueryAmino;
            fromAminoMsg(object: _81.RequestQueryAminoMsg): _81.RequestQuery;
            fromProtoMsg(message: _81.RequestQueryProtoMsg): _81.RequestQuery;
            toProto(message: _81.RequestQuery): Uint8Array;
            toProtoMsg(message: _81.RequestQuery): _81.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            is(o: any): o is _81.RequestBeginBlock;
            isSDK(o: any): o is _81.RequestBeginBlockSDKType;
            isAmino(o: any): o is _81.RequestBeginBlockAmino;
            encode(message: _81.RequestBeginBlock, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestBeginBlock;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestBeginBlock>): _81.RequestBeginBlock;
            fromAmino(object: _81.RequestBeginBlockAmino): _81.RequestBeginBlock;
            toAmino(message: _81.RequestBeginBlock): _81.RequestBeginBlockAmino;
            fromAminoMsg(object: _81.RequestBeginBlockAminoMsg): _81.RequestBeginBlock;
            fromProtoMsg(message: _81.RequestBeginBlockProtoMsg): _81.RequestBeginBlock;
            toProto(message: _81.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _81.RequestBeginBlock): _81.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            is(o: any): o is _81.RequestCheckTx;
            isSDK(o: any): o is _81.RequestCheckTxSDKType;
            isAmino(o: any): o is _81.RequestCheckTxAmino;
            encode(message: _81.RequestCheckTx, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestCheckTx;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestCheckTx>): _81.RequestCheckTx;
            fromAmino(object: _81.RequestCheckTxAmino): _81.RequestCheckTx;
            toAmino(message: _81.RequestCheckTx): _81.RequestCheckTxAmino;
            fromAminoMsg(object: _81.RequestCheckTxAminoMsg): _81.RequestCheckTx;
            fromProtoMsg(message: _81.RequestCheckTxProtoMsg): _81.RequestCheckTx;
            toProto(message: _81.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _81.RequestCheckTx): _81.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            is(o: any): o is _81.RequestDeliverTx;
            isSDK(o: any): o is _81.RequestDeliverTxSDKType;
            isAmino(o: any): o is _81.RequestDeliverTxAmino;
            encode(message: _81.RequestDeliverTx, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestDeliverTx;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestDeliverTx>): _81.RequestDeliverTx;
            fromAmino(object: _81.RequestDeliverTxAmino): _81.RequestDeliverTx;
            toAmino(message: _81.RequestDeliverTx): _81.RequestDeliverTxAmino;
            fromAminoMsg(object: _81.RequestDeliverTxAminoMsg): _81.RequestDeliverTx;
            fromProtoMsg(message: _81.RequestDeliverTxProtoMsg): _81.RequestDeliverTx;
            toProto(message: _81.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _81.RequestDeliverTx): _81.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            is(o: any): o is _81.RequestEndBlock;
            isSDK(o: any): o is _81.RequestEndBlockSDKType;
            isAmino(o: any): o is _81.RequestEndBlockAmino;
            encode(message: _81.RequestEndBlock, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestEndBlock;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestEndBlock>): _81.RequestEndBlock;
            fromAmino(object: _81.RequestEndBlockAmino): _81.RequestEndBlock;
            toAmino(message: _81.RequestEndBlock): _81.RequestEndBlockAmino;
            fromAminoMsg(object: _81.RequestEndBlockAminoMsg): _81.RequestEndBlock;
            fromProtoMsg(message: _81.RequestEndBlockProtoMsg): _81.RequestEndBlock;
            toProto(message: _81.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _81.RequestEndBlock): _81.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            is(o: any): o is _81.RequestCommit;
            isSDK(o: any): o is _81.RequestCommitSDKType;
            isAmino(o: any): o is _81.RequestCommitAmino;
            encode(_: _81.RequestCommit, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestCommit;
            fromPartial(_: import("../helpers").DeepPartial<_81.RequestCommit>): _81.RequestCommit;
            fromAmino(_: _81.RequestCommitAmino): _81.RequestCommit;
            toAmino(_: _81.RequestCommit): _81.RequestCommitAmino;
            fromAminoMsg(object: _81.RequestCommitAminoMsg): _81.RequestCommit;
            fromProtoMsg(message: _81.RequestCommitProtoMsg): _81.RequestCommit;
            toProto(message: _81.RequestCommit): Uint8Array;
            toProtoMsg(message: _81.RequestCommit): _81.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            is(o: any): o is _81.RequestListSnapshots;
            isSDK(o: any): o is _81.RequestListSnapshotsSDKType;
            isAmino(o: any): o is _81.RequestListSnapshotsAmino;
            encode(_: _81.RequestListSnapshots, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestListSnapshots;
            fromPartial(_: import("../helpers").DeepPartial<_81.RequestListSnapshots>): _81.RequestListSnapshots;
            fromAmino(_: _81.RequestListSnapshotsAmino): _81.RequestListSnapshots;
            toAmino(_: _81.RequestListSnapshots): _81.RequestListSnapshotsAmino;
            fromAminoMsg(object: _81.RequestListSnapshotsAminoMsg): _81.RequestListSnapshots;
            fromProtoMsg(message: _81.RequestListSnapshotsProtoMsg): _81.RequestListSnapshots;
            toProto(message: _81.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _81.RequestListSnapshots): _81.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _81.RequestOfferSnapshot;
            isSDK(o: any): o is _81.RequestOfferSnapshotSDKType;
            isAmino(o: any): o is _81.RequestOfferSnapshotAmino;
            encode(message: _81.RequestOfferSnapshot, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestOfferSnapshot;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestOfferSnapshot>): _81.RequestOfferSnapshot;
            fromAmino(object: _81.RequestOfferSnapshotAmino): _81.RequestOfferSnapshot;
            toAmino(message: _81.RequestOfferSnapshot): _81.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _81.RequestOfferSnapshotAminoMsg): _81.RequestOfferSnapshot;
            fromProtoMsg(message: _81.RequestOfferSnapshotProtoMsg): _81.RequestOfferSnapshot;
            toProto(message: _81.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _81.RequestOfferSnapshot): _81.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _81.RequestLoadSnapshotChunk;
            isSDK(o: any): o is _81.RequestLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _81.RequestLoadSnapshotChunkAmino;
            encode(message: _81.RequestLoadSnapshotChunk, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestLoadSnapshotChunk;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestLoadSnapshotChunk>): _81.RequestLoadSnapshotChunk;
            fromAmino(object: _81.RequestLoadSnapshotChunkAmino): _81.RequestLoadSnapshotChunk;
            toAmino(message: _81.RequestLoadSnapshotChunk): _81.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _81.RequestLoadSnapshotChunkAminoMsg): _81.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _81.RequestLoadSnapshotChunkProtoMsg): _81.RequestLoadSnapshotChunk;
            toProto(message: _81.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _81.RequestLoadSnapshotChunk): _81.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _81.RequestApplySnapshotChunk;
            isSDK(o: any): o is _81.RequestApplySnapshotChunkSDKType;
            isAmino(o: any): o is _81.RequestApplySnapshotChunkAmino;
            encode(message: _81.RequestApplySnapshotChunk, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.RequestApplySnapshotChunk;
            fromPartial(object: import("../helpers").DeepPartial<_81.RequestApplySnapshotChunk>): _81.RequestApplySnapshotChunk;
            fromAmino(object: _81.RequestApplySnapshotChunkAmino): _81.RequestApplySnapshotChunk;
            toAmino(message: _81.RequestApplySnapshotChunk): _81.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _81.RequestApplySnapshotChunkAminoMsg): _81.RequestApplySnapshotChunk;
            fromProtoMsg(message: _81.RequestApplySnapshotChunkProtoMsg): _81.RequestApplySnapshotChunk;
            toProto(message: _81.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _81.RequestApplySnapshotChunk): _81.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            is(o: any): o is _81.Response;
            isSDK(o: any): o is _81.ResponseSDKType;
            isAmino(o: any): o is _81.ResponseAmino;
            encode(message: _81.Response, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.Response;
            fromPartial(object: import("../helpers").DeepPartial<_81.Response>): _81.Response;
            fromAmino(object: _81.ResponseAmino): _81.Response;
            toAmino(message: _81.Response): _81.ResponseAmino;
            fromAminoMsg(object: _81.ResponseAminoMsg): _81.Response;
            fromProtoMsg(message: _81.ResponseProtoMsg): _81.Response;
            toProto(message: _81.Response): Uint8Array;
            toProtoMsg(message: _81.Response): _81.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            is(o: any): o is _81.ResponseException;
            isSDK(o: any): o is _81.ResponseExceptionSDKType;
            isAmino(o: any): o is _81.ResponseExceptionAmino;
            encode(message: _81.ResponseException, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseException;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseException>): _81.ResponseException;
            fromAmino(object: _81.ResponseExceptionAmino): _81.ResponseException;
            toAmino(message: _81.ResponseException): _81.ResponseExceptionAmino;
            fromAminoMsg(object: _81.ResponseExceptionAminoMsg): _81.ResponseException;
            fromProtoMsg(message: _81.ResponseExceptionProtoMsg): _81.ResponseException;
            toProto(message: _81.ResponseException): Uint8Array;
            toProtoMsg(message: _81.ResponseException): _81.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            is(o: any): o is _81.ResponseEcho;
            isSDK(o: any): o is _81.ResponseEchoSDKType;
            isAmino(o: any): o is _81.ResponseEchoAmino;
            encode(message: _81.ResponseEcho, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseEcho;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseEcho>): _81.ResponseEcho;
            fromAmino(object: _81.ResponseEchoAmino): _81.ResponseEcho;
            toAmino(message: _81.ResponseEcho): _81.ResponseEchoAmino;
            fromAminoMsg(object: _81.ResponseEchoAminoMsg): _81.ResponseEcho;
            fromProtoMsg(message: _81.ResponseEchoProtoMsg): _81.ResponseEcho;
            toProto(message: _81.ResponseEcho): Uint8Array;
            toProtoMsg(message: _81.ResponseEcho): _81.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            is(o: any): o is _81.ResponseFlush;
            isSDK(o: any): o is _81.ResponseFlushSDKType;
            isAmino(o: any): o is _81.ResponseFlushAmino;
            encode(_: _81.ResponseFlush, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseFlush;
            fromPartial(_: import("../helpers").DeepPartial<_81.ResponseFlush>): _81.ResponseFlush;
            fromAmino(_: _81.ResponseFlushAmino): _81.ResponseFlush;
            toAmino(_: _81.ResponseFlush): _81.ResponseFlushAmino;
            fromAminoMsg(object: _81.ResponseFlushAminoMsg): _81.ResponseFlush;
            fromProtoMsg(message: _81.ResponseFlushProtoMsg): _81.ResponseFlush;
            toProto(message: _81.ResponseFlush): Uint8Array;
            toProtoMsg(message: _81.ResponseFlush): _81.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            is(o: any): o is _81.ResponseInfo;
            isSDK(o: any): o is _81.ResponseInfoSDKType;
            isAmino(o: any): o is _81.ResponseInfoAmino;
            encode(message: _81.ResponseInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseInfo;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseInfo>): _81.ResponseInfo;
            fromAmino(object: _81.ResponseInfoAmino): _81.ResponseInfo;
            toAmino(message: _81.ResponseInfo): _81.ResponseInfoAmino;
            fromAminoMsg(object: _81.ResponseInfoAminoMsg): _81.ResponseInfo;
            fromProtoMsg(message: _81.ResponseInfoProtoMsg): _81.ResponseInfo;
            toProto(message: _81.ResponseInfo): Uint8Array;
            toProtoMsg(message: _81.ResponseInfo): _81.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            is(o: any): o is _81.ResponseSetOption;
            isSDK(o: any): o is _81.ResponseSetOptionSDKType;
            isAmino(o: any): o is _81.ResponseSetOptionAmino;
            encode(message: _81.ResponseSetOption, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseSetOption;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseSetOption>): _81.ResponseSetOption;
            fromAmino(object: _81.ResponseSetOptionAmino): _81.ResponseSetOption;
            toAmino(message: _81.ResponseSetOption): _81.ResponseSetOptionAmino;
            fromAminoMsg(object: _81.ResponseSetOptionAminoMsg): _81.ResponseSetOption;
            fromProtoMsg(message: _81.ResponseSetOptionProtoMsg): _81.ResponseSetOption;
            toProto(message: _81.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _81.ResponseSetOption): _81.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            is(o: any): o is _81.ResponseInitChain;
            isSDK(o: any): o is _81.ResponseInitChainSDKType;
            isAmino(o: any): o is _81.ResponseInitChainAmino;
            encode(message: _81.ResponseInitChain, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseInitChain;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseInitChain>): _81.ResponseInitChain;
            fromAmino(object: _81.ResponseInitChainAmino): _81.ResponseInitChain;
            toAmino(message: _81.ResponseInitChain): _81.ResponseInitChainAmino;
            fromAminoMsg(object: _81.ResponseInitChainAminoMsg): _81.ResponseInitChain;
            fromProtoMsg(message: _81.ResponseInitChainProtoMsg): _81.ResponseInitChain;
            toProto(message: _81.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _81.ResponseInitChain): _81.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            is(o: any): o is _81.ResponseQuery;
            isSDK(o: any): o is _81.ResponseQuerySDKType;
            isAmino(o: any): o is _81.ResponseQueryAmino;
            encode(message: _81.ResponseQuery, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseQuery;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseQuery>): _81.ResponseQuery;
            fromAmino(object: _81.ResponseQueryAmino): _81.ResponseQuery;
            toAmino(message: _81.ResponseQuery): _81.ResponseQueryAmino;
            fromAminoMsg(object: _81.ResponseQueryAminoMsg): _81.ResponseQuery;
            fromProtoMsg(message: _81.ResponseQueryProtoMsg): _81.ResponseQuery;
            toProto(message: _81.ResponseQuery): Uint8Array;
            toProtoMsg(message: _81.ResponseQuery): _81.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            is(o: any): o is _81.ResponseBeginBlock;
            isSDK(o: any): o is _81.ResponseBeginBlockSDKType;
            isAmino(o: any): o is _81.ResponseBeginBlockAmino;
            encode(message: _81.ResponseBeginBlock, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseBeginBlock;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseBeginBlock>): _81.ResponseBeginBlock;
            fromAmino(object: _81.ResponseBeginBlockAmino): _81.ResponseBeginBlock;
            toAmino(message: _81.ResponseBeginBlock): _81.ResponseBeginBlockAmino;
            fromAminoMsg(object: _81.ResponseBeginBlockAminoMsg): _81.ResponseBeginBlock;
            fromProtoMsg(message: _81.ResponseBeginBlockProtoMsg): _81.ResponseBeginBlock;
            toProto(message: _81.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _81.ResponseBeginBlock): _81.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            is(o: any): o is _81.ResponseCheckTx;
            isSDK(o: any): o is _81.ResponseCheckTxSDKType;
            isAmino(o: any): o is _81.ResponseCheckTxAmino;
            encode(message: _81.ResponseCheckTx, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseCheckTx;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseCheckTx>): _81.ResponseCheckTx;
            fromAmino(object: _81.ResponseCheckTxAmino): _81.ResponseCheckTx;
            toAmino(message: _81.ResponseCheckTx): _81.ResponseCheckTxAmino;
            fromAminoMsg(object: _81.ResponseCheckTxAminoMsg): _81.ResponseCheckTx;
            fromProtoMsg(message: _81.ResponseCheckTxProtoMsg): _81.ResponseCheckTx;
            toProto(message: _81.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _81.ResponseCheckTx): _81.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            is(o: any): o is _81.ResponseDeliverTx;
            isSDK(o: any): o is _81.ResponseDeliverTxSDKType;
            isAmino(o: any): o is _81.ResponseDeliverTxAmino;
            encode(message: _81.ResponseDeliverTx, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseDeliverTx;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseDeliverTx>): _81.ResponseDeliverTx;
            fromAmino(object: _81.ResponseDeliverTxAmino): _81.ResponseDeliverTx;
            toAmino(message: _81.ResponseDeliverTx): _81.ResponseDeliverTxAmino;
            fromAminoMsg(object: _81.ResponseDeliverTxAminoMsg): _81.ResponseDeliverTx;
            fromProtoMsg(message: _81.ResponseDeliverTxProtoMsg): _81.ResponseDeliverTx;
            toProto(message: _81.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _81.ResponseDeliverTx): _81.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            is(o: any): o is _81.ResponseEndBlock;
            isSDK(o: any): o is _81.ResponseEndBlockSDKType;
            isAmino(o: any): o is _81.ResponseEndBlockAmino;
            encode(message: _81.ResponseEndBlock, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseEndBlock;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseEndBlock>): _81.ResponseEndBlock;
            fromAmino(object: _81.ResponseEndBlockAmino): _81.ResponseEndBlock;
            toAmino(message: _81.ResponseEndBlock): _81.ResponseEndBlockAmino;
            fromAminoMsg(object: _81.ResponseEndBlockAminoMsg): _81.ResponseEndBlock;
            fromProtoMsg(message: _81.ResponseEndBlockProtoMsg): _81.ResponseEndBlock;
            toProto(message: _81.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _81.ResponseEndBlock): _81.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            is(o: any): o is _81.ResponseCommit;
            isSDK(o: any): o is _81.ResponseCommitSDKType;
            isAmino(o: any): o is _81.ResponseCommitAmino;
            encode(message: _81.ResponseCommit, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseCommit;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseCommit>): _81.ResponseCommit;
            fromAmino(object: _81.ResponseCommitAmino): _81.ResponseCommit;
            toAmino(message: _81.ResponseCommit): _81.ResponseCommitAmino;
            fromAminoMsg(object: _81.ResponseCommitAminoMsg): _81.ResponseCommit;
            fromProtoMsg(message: _81.ResponseCommitProtoMsg): _81.ResponseCommit;
            toProto(message: _81.ResponseCommit): Uint8Array;
            toProtoMsg(message: _81.ResponseCommit): _81.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            is(o: any): o is _81.ResponseListSnapshots;
            isSDK(o: any): o is _81.ResponseListSnapshotsSDKType;
            isAmino(o: any): o is _81.ResponseListSnapshotsAmino;
            encode(message: _81.ResponseListSnapshots, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseListSnapshots;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseListSnapshots>): _81.ResponseListSnapshots;
            fromAmino(object: _81.ResponseListSnapshotsAmino): _81.ResponseListSnapshots;
            toAmino(message: _81.ResponseListSnapshots): _81.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _81.ResponseListSnapshotsAminoMsg): _81.ResponseListSnapshots;
            fromProtoMsg(message: _81.ResponseListSnapshotsProtoMsg): _81.ResponseListSnapshots;
            toProto(message: _81.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _81.ResponseListSnapshots): _81.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _81.ResponseOfferSnapshot;
            isSDK(o: any): o is _81.ResponseOfferSnapshotSDKType;
            isAmino(o: any): o is _81.ResponseOfferSnapshotAmino;
            encode(message: _81.ResponseOfferSnapshot, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseOfferSnapshot;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseOfferSnapshot>): _81.ResponseOfferSnapshot;
            fromAmino(object: _81.ResponseOfferSnapshotAmino): _81.ResponseOfferSnapshot;
            toAmino(message: _81.ResponseOfferSnapshot): _81.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _81.ResponseOfferSnapshotAminoMsg): _81.ResponseOfferSnapshot;
            fromProtoMsg(message: _81.ResponseOfferSnapshotProtoMsg): _81.ResponseOfferSnapshot;
            toProto(message: _81.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _81.ResponseOfferSnapshot): _81.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _81.ResponseLoadSnapshotChunk;
            isSDK(o: any): o is _81.ResponseLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _81.ResponseLoadSnapshotChunkAmino;
            encode(message: _81.ResponseLoadSnapshotChunk, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseLoadSnapshotChunk;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseLoadSnapshotChunk>): _81.ResponseLoadSnapshotChunk;
            fromAmino(object: _81.ResponseLoadSnapshotChunkAmino): _81.ResponseLoadSnapshotChunk;
            toAmino(message: _81.ResponseLoadSnapshotChunk): _81.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _81.ResponseLoadSnapshotChunkAminoMsg): _81.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _81.ResponseLoadSnapshotChunkProtoMsg): _81.ResponseLoadSnapshotChunk;
            toProto(message: _81.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _81.ResponseLoadSnapshotChunk): _81.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _81.ResponseApplySnapshotChunk;
            isSDK(o: any): o is _81.ResponseApplySnapshotChunkSDKType;
            isAmino(o: any): o is _81.ResponseApplySnapshotChunkAmino;
            encode(message: _81.ResponseApplySnapshotChunk, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ResponseApplySnapshotChunk;
            fromPartial(object: import("../helpers").DeepPartial<_81.ResponseApplySnapshotChunk>): _81.ResponseApplySnapshotChunk;
            fromAmino(object: _81.ResponseApplySnapshotChunkAmino): _81.ResponseApplySnapshotChunk;
            toAmino(message: _81.ResponseApplySnapshotChunk): _81.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _81.ResponseApplySnapshotChunkAminoMsg): _81.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _81.ResponseApplySnapshotChunkProtoMsg): _81.ResponseApplySnapshotChunk;
            toProto(message: _81.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _81.ResponseApplySnapshotChunk): _81.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _81.ConsensusParams;
            isSDK(o: any): o is _81.ConsensusParamsSDKType;
            isAmino(o: any): o is _81.ConsensusParamsAmino;
            encode(message: _81.ConsensusParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ConsensusParams;
            fromPartial(object: import("../helpers").DeepPartial<_81.ConsensusParams>): _81.ConsensusParams;
            fromAmino(object: _81.ConsensusParamsAmino): _81.ConsensusParams;
            toAmino(message: _81.ConsensusParams): _81.ConsensusParamsAmino;
            fromAminoMsg(object: _81.ConsensusParamsAminoMsg): _81.ConsensusParams;
            fromProtoMsg(message: _81.ConsensusParamsProtoMsg): _81.ConsensusParams;
            toProto(message: _81.ConsensusParams): Uint8Array;
            toProtoMsg(message: _81.ConsensusParams): _81.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _81.BlockParams;
            isSDK(o: any): o is _81.BlockParamsSDKType;
            isAmino(o: any): o is _81.BlockParamsAmino;
            encode(message: _81.BlockParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.BlockParams;
            fromPartial(object: import("../helpers").DeepPartial<_81.BlockParams>): _81.BlockParams;
            fromAmino(object: _81.BlockParamsAmino): _81.BlockParams;
            toAmino(message: _81.BlockParams): _81.BlockParamsAmino;
            fromAminoMsg(object: _81.BlockParamsAminoMsg): _81.BlockParams;
            fromProtoMsg(message: _81.BlockParamsProtoMsg): _81.BlockParams;
            toProto(message: _81.BlockParams): Uint8Array;
            toProtoMsg(message: _81.BlockParams): _81.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            is(o: any): o is _81.LastCommitInfo;
            isSDK(o: any): o is _81.LastCommitInfoSDKType;
            isAmino(o: any): o is _81.LastCommitInfoAmino;
            encode(message: _81.LastCommitInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.LastCommitInfo;
            fromPartial(object: import("../helpers").DeepPartial<_81.LastCommitInfo>): _81.LastCommitInfo;
            fromAmino(object: _81.LastCommitInfoAmino): _81.LastCommitInfo;
            toAmino(message: _81.LastCommitInfo): _81.LastCommitInfoAmino;
            fromAminoMsg(object: _81.LastCommitInfoAminoMsg): _81.LastCommitInfo;
            fromProtoMsg(message: _81.LastCommitInfoProtoMsg): _81.LastCommitInfo;
            toProto(message: _81.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _81.LastCommitInfo): _81.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            is(o: any): o is _81.Event;
            isSDK(o: any): o is _81.EventSDKType;
            isAmino(o: any): o is _81.EventAmino;
            encode(message: _81.Event, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.Event;
            fromPartial(object: import("../helpers").DeepPartial<_81.Event>): _81.Event;
            fromAmino(object: _81.EventAmino): _81.Event;
            toAmino(message: _81.Event): _81.EventAmino;
            fromAminoMsg(object: _81.EventAminoMsg): _81.Event;
            fromProtoMsg(message: _81.EventProtoMsg): _81.Event;
            toProto(message: _81.Event): Uint8Array;
            toProtoMsg(message: _81.Event): _81.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            is(o: any): o is _81.EventAttribute;
            isSDK(o: any): o is _81.EventAttributeSDKType;
            isAmino(o: any): o is _81.EventAttributeAmino;
            encode(message: _81.EventAttribute, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.EventAttribute;
            fromPartial(object: import("../helpers").DeepPartial<_81.EventAttribute>): _81.EventAttribute;
            fromAmino(object: _81.EventAttributeAmino): _81.EventAttribute;
            toAmino(message: _81.EventAttribute): _81.EventAttributeAmino;
            fromAminoMsg(object: _81.EventAttributeAminoMsg): _81.EventAttribute;
            fromProtoMsg(message: _81.EventAttributeProtoMsg): _81.EventAttribute;
            toProto(message: _81.EventAttribute): Uint8Array;
            toProtoMsg(message: _81.EventAttribute): _81.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            is(o: any): o is _81.TxResult;
            isSDK(o: any): o is _81.TxResultSDKType;
            isAmino(o: any): o is _81.TxResultAmino;
            encode(message: _81.TxResult, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.TxResult;
            fromPartial(object: import("../helpers").DeepPartial<_81.TxResult>): _81.TxResult;
            fromAmino(object: _81.TxResultAmino): _81.TxResult;
            toAmino(message: _81.TxResult): _81.TxResultAmino;
            fromAminoMsg(object: _81.TxResultAminoMsg): _81.TxResult;
            fromProtoMsg(message: _81.TxResultProtoMsg): _81.TxResult;
            toProto(message: _81.TxResult): Uint8Array;
            toProtoMsg(message: _81.TxResult): _81.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _81.Validator;
            isSDK(o: any): o is _81.ValidatorSDKType;
            isAmino(o: any): o is _81.ValidatorAmino;
            encode(message: _81.Validator, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.Validator;
            fromPartial(object: import("../helpers").DeepPartial<_81.Validator>): _81.Validator;
            fromAmino(object: _81.ValidatorAmino): _81.Validator;
            toAmino(message: _81.Validator): _81.ValidatorAmino;
            fromAminoMsg(object: _81.ValidatorAminoMsg): _81.Validator;
            fromProtoMsg(message: _81.ValidatorProtoMsg): _81.Validator;
            toProto(message: _81.Validator): Uint8Array;
            toProtoMsg(message: _81.Validator): _81.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            is(o: any): o is _81.ValidatorUpdate;
            isSDK(o: any): o is _81.ValidatorUpdateSDKType;
            isAmino(o: any): o is _81.ValidatorUpdateAmino;
            encode(message: _81.ValidatorUpdate, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.ValidatorUpdate;
            fromPartial(object: import("../helpers").DeepPartial<_81.ValidatorUpdate>): _81.ValidatorUpdate;
            fromAmino(object: _81.ValidatorUpdateAmino): _81.ValidatorUpdate;
            toAmino(message: _81.ValidatorUpdate): _81.ValidatorUpdateAmino;
            fromAminoMsg(object: _81.ValidatorUpdateAminoMsg): _81.ValidatorUpdate;
            fromProtoMsg(message: _81.ValidatorUpdateProtoMsg): _81.ValidatorUpdate;
            toProto(message: _81.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _81.ValidatorUpdate): _81.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            is(o: any): o is _81.VoteInfo;
            isSDK(o: any): o is _81.VoteInfoSDKType;
            isAmino(o: any): o is _81.VoteInfoAmino;
            encode(message: _81.VoteInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.VoteInfo;
            fromPartial(object: import("../helpers").DeepPartial<_81.VoteInfo>): _81.VoteInfo;
            fromAmino(object: _81.VoteInfoAmino): _81.VoteInfo;
            toAmino(message: _81.VoteInfo): _81.VoteInfoAmino;
            fromAminoMsg(object: _81.VoteInfoAminoMsg): _81.VoteInfo;
            fromProtoMsg(message: _81.VoteInfoProtoMsg): _81.VoteInfo;
            toProto(message: _81.VoteInfo): Uint8Array;
            toProtoMsg(message: _81.VoteInfo): _81.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _81.Evidence;
            isSDK(o: any): o is _81.EvidenceSDKType;
            isAmino(o: any): o is _81.EvidenceAmino;
            encode(message: _81.Evidence, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.Evidence;
            fromPartial(object: import("../helpers").DeepPartial<_81.Evidence>): _81.Evidence;
            fromAmino(object: _81.EvidenceAmino): _81.Evidence;
            toAmino(message: _81.Evidence): _81.EvidenceAmino;
            fromAminoMsg(object: _81.EvidenceAminoMsg): _81.Evidence;
            fromProtoMsg(message: _81.EvidenceProtoMsg): _81.Evidence;
            toProto(message: _81.Evidence): Uint8Array;
            toProtoMsg(message: _81.Evidence): _81.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            is(o: any): o is _81.Snapshot;
            isSDK(o: any): o is _81.SnapshotSDKType;
            isAmino(o: any): o is _81.SnapshotAmino;
            encode(message: _81.Snapshot, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _81.Snapshot;
            fromPartial(object: import("../helpers").DeepPartial<_81.Snapshot>): _81.Snapshot;
            fromAmino(object: _81.SnapshotAmino): _81.Snapshot;
            toAmino(message: _81.Snapshot): _81.SnapshotAmino;
            fromAminoMsg(object: _81.SnapshotAminoMsg): _81.Snapshot;
            fromProtoMsg(message: _81.SnapshotProtoMsg): _81.Snapshot;
            toProto(message: _81.Snapshot): Uint8Array;
            toProtoMsg(message: _81.Snapshot): _81.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            is(o: any): o is _83.Proof;
            isSDK(o: any): o is _83.ProofSDKType;
            isAmino(o: any): o is _83.ProofAmino;
            encode(message: _83.Proof, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _83.Proof;
            fromPartial(object: import("../helpers").DeepPartial<_83.Proof>): _83.Proof;
            fromAmino(object: _83.ProofAmino): _83.Proof;
            toAmino(message: _83.Proof): _83.ProofAmino;
            fromAminoMsg(object: _83.ProofAminoMsg): _83.Proof;
            fromProtoMsg(message: _83.ProofProtoMsg): _83.Proof;
            toProto(message: _83.Proof): Uint8Array;
            toProtoMsg(message: _83.Proof): _83.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            is(o: any): o is _83.ValueOp;
            isSDK(o: any): o is _83.ValueOpSDKType;
            isAmino(o: any): o is _83.ValueOpAmino;
            encode(message: _83.ValueOp, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _83.ValueOp;
            fromPartial(object: import("../helpers").DeepPartial<_83.ValueOp>): _83.ValueOp;
            fromAmino(object: _83.ValueOpAmino): _83.ValueOp;
            toAmino(message: _83.ValueOp): _83.ValueOpAmino;
            fromAminoMsg(object: _83.ValueOpAminoMsg): _83.ValueOp;
            fromProtoMsg(message: _83.ValueOpProtoMsg): _83.ValueOp;
            toProto(message: _83.ValueOp): Uint8Array;
            toProtoMsg(message: _83.ValueOp): _83.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            is(o: any): o is _83.DominoOp;
            isSDK(o: any): o is _83.DominoOpSDKType;
            isAmino(o: any): o is _83.DominoOpAmino;
            encode(message: _83.DominoOp, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _83.DominoOp;
            fromPartial(object: import("../helpers").DeepPartial<_83.DominoOp>): _83.DominoOp;
            fromAmino(object: _83.DominoOpAmino): _83.DominoOp;
            toAmino(message: _83.DominoOp): _83.DominoOpAmino;
            fromAminoMsg(object: _83.DominoOpAminoMsg): _83.DominoOp;
            fromProtoMsg(message: _83.DominoOpProtoMsg): _83.DominoOp;
            toProto(message: _83.DominoOp): Uint8Array;
            toProtoMsg(message: _83.DominoOp): _83.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            is(o: any): o is _83.ProofOp;
            isSDK(o: any): o is _83.ProofOpSDKType;
            isAmino(o: any): o is _83.ProofOpAmino;
            encode(message: _83.ProofOp, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _83.ProofOp;
            fromPartial(object: import("../helpers").DeepPartial<_83.ProofOp>): _83.ProofOp;
            fromAmino(object: _83.ProofOpAmino): _83.ProofOp;
            toAmino(message: _83.ProofOp): _83.ProofOpAmino;
            fromAminoMsg(object: _83.ProofOpAminoMsg): _83.ProofOp;
            fromProtoMsg(message: _83.ProofOpProtoMsg): _83.ProofOp;
            toProto(message: _83.ProofOp): Uint8Array;
            toProtoMsg(message: _83.ProofOp): _83.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            is(o: any): o is _83.ProofOps;
            isSDK(o: any): o is _83.ProofOpsSDKType;
            isAmino(o: any): o is _83.ProofOpsAmino;
            encode(message: _83.ProofOps, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _83.ProofOps;
            fromPartial(object: import("../helpers").DeepPartial<_83.ProofOps>): _83.ProofOps;
            fromAmino(object: _83.ProofOpsAmino): _83.ProofOps;
            toAmino(message: _83.ProofOps): _83.ProofOpsAmino;
            fromAminoMsg(object: _83.ProofOpsAminoMsg): _83.ProofOps;
            fromProtoMsg(message: _83.ProofOpsProtoMsg): _83.ProofOps;
            toProto(message: _83.ProofOps): Uint8Array;
            toProtoMsg(message: _83.ProofOps): _83.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            is(o: any): o is _82.PublicKey;
            isSDK(o: any): o is _82.PublicKeySDKType;
            isAmino(o: any): o is _82.PublicKeyAmino;
            encode(message: _82.PublicKey, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _82.PublicKey;
            fromPartial(object: import("../helpers").DeepPartial<_82.PublicKey>): _82.PublicKey;
            fromAmino(object: _82.PublicKeyAmino): _82.PublicKey;
            toAmino(message: _82.PublicKey): _82.PublicKeyAmino;
            fromAminoMsg(object: _82.PublicKeyAminoMsg): _82.PublicKey;
            fromProtoMsg(message: _82.PublicKeyProtoMsg): _82.PublicKey;
            toProto(message: _82.PublicKey): Uint8Array;
            toProtoMsg(message: _82.PublicKey): _82.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                is(o: any): o is _84.BitArray;
                isSDK(o: any): o is _84.BitArraySDKType;
                isAmino(o: any): o is _84.BitArrayAmino;
                encode(message: _84.BitArray, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
                decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _84.BitArray;
                fromPartial(object: import("../helpers").DeepPartial<_84.BitArray>): _84.BitArray;
                fromAmino(object: _84.BitArrayAmino): _84.BitArray;
                toAmino(message: _84.BitArray): _84.BitArrayAmino;
                fromAminoMsg(object: _84.BitArrayAminoMsg): _84.BitArray;
                fromProtoMsg(message: _84.BitArrayProtoMsg): _84.BitArray;
                toProto(message: _84.BitArray): Uint8Array;
                toProtoMsg(message: _84.BitArray): _84.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        ProtocolVersion: {
            typeUrl: string;
            is(o: any): o is _85.ProtocolVersion;
            isSDK(o: any): o is _85.ProtocolVersionSDKType;
            isAmino(o: any): o is _85.ProtocolVersionAmino;
            encode(message: _85.ProtocolVersion, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _85.ProtocolVersion;
            fromPartial(object: import("../helpers").DeepPartial<_85.ProtocolVersion>): _85.ProtocolVersion;
            fromAmino(object: _85.ProtocolVersionAmino): _85.ProtocolVersion;
            toAmino(message: _85.ProtocolVersion): _85.ProtocolVersionAmino;
            fromAminoMsg(object: _85.ProtocolVersionAminoMsg): _85.ProtocolVersion;
            fromProtoMsg(message: _85.ProtocolVersionProtoMsg): _85.ProtocolVersion;
            toProto(message: _85.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _85.ProtocolVersion): _85.ProtocolVersionProtoMsg;
        };
        NodeInfo: {
            typeUrl: string;
            is(o: any): o is _85.NodeInfo;
            isSDK(o: any): o is _85.NodeInfoSDKType;
            isAmino(o: any): o is _85.NodeInfoAmino;
            encode(message: _85.NodeInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _85.NodeInfo;
            fromPartial(object: import("../helpers").DeepPartial<_85.NodeInfo>): _85.NodeInfo;
            fromAmino(object: _85.NodeInfoAmino): _85.NodeInfo;
            toAmino(message: _85.NodeInfo): _85.NodeInfoAmino;
            fromAminoMsg(object: _85.NodeInfoAminoMsg): _85.NodeInfo;
            fromProtoMsg(message: _85.NodeInfoProtoMsg): _85.NodeInfo;
            toProto(message: _85.NodeInfo): Uint8Array;
            toProtoMsg(message: _85.NodeInfo): _85.NodeInfoProtoMsg;
        };
        NodeInfoOther: {
            typeUrl: string;
            is(o: any): o is _85.NodeInfoOther;
            isSDK(o: any): o is _85.NodeInfoOtherSDKType;
            isAmino(o: any): o is _85.NodeInfoOtherAmino;
            encode(message: _85.NodeInfoOther, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _85.NodeInfoOther;
            fromPartial(object: import("../helpers").DeepPartial<_85.NodeInfoOther>): _85.NodeInfoOther;
            fromAmino(object: _85.NodeInfoOtherAmino): _85.NodeInfoOther;
            toAmino(message: _85.NodeInfoOther): _85.NodeInfoOtherAmino;
            fromAminoMsg(object: _85.NodeInfoOtherAminoMsg): _85.NodeInfoOther;
            fromProtoMsg(message: _85.NodeInfoOtherProtoMsg): _85.NodeInfoOther;
            toProto(message: _85.NodeInfoOther): Uint8Array;
            toProtoMsg(message: _85.NodeInfoOther): _85.NodeInfoOtherProtoMsg;
        };
        PeerInfo: {
            typeUrl: string;
            is(o: any): o is _85.PeerInfo;
            isSDK(o: any): o is _85.PeerInfoSDKType;
            isAmino(o: any): o is _85.PeerInfoAmino;
            encode(message: _85.PeerInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _85.PeerInfo;
            fromPartial(object: import("../helpers").DeepPartial<_85.PeerInfo>): _85.PeerInfo;
            fromAmino(object: _85.PeerInfoAmino): _85.PeerInfo;
            toAmino(message: _85.PeerInfo): _85.PeerInfoAmino;
            fromAminoMsg(object: _85.PeerInfoAminoMsg): _85.PeerInfo;
            fromProtoMsg(message: _85.PeerInfoProtoMsg): _85.PeerInfo;
            toProto(message: _85.PeerInfo): Uint8Array;
            toProtoMsg(message: _85.PeerInfo): _85.PeerInfoProtoMsg;
        };
        PeerAddressInfo: {
            typeUrl: string;
            is(o: any): o is _85.PeerAddressInfo;
            isSDK(o: any): o is _85.PeerAddressInfoSDKType;
            isAmino(o: any): o is _85.PeerAddressInfoAmino;
            encode(message: _85.PeerAddressInfo, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _85.PeerAddressInfo;
            fromPartial(object: import("../helpers").DeepPartial<_85.PeerAddressInfo>): _85.PeerAddressInfo;
            fromAmino(object: _85.PeerAddressInfoAmino): _85.PeerAddressInfo;
            toAmino(message: _85.PeerAddressInfo): _85.PeerAddressInfoAmino;
            fromAminoMsg(object: _85.PeerAddressInfoAminoMsg): _85.PeerAddressInfo;
            fromProtoMsg(message: _85.PeerAddressInfoProtoMsg): _85.PeerAddressInfo;
            toProto(message: _85.PeerAddressInfo): Uint8Array;
            toProtoMsg(message: _85.PeerAddressInfo): _85.PeerAddressInfoProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            is(o: any): o is _90.ValidatorSet;
            isSDK(o: any): o is _90.ValidatorSetSDKType;
            isAmino(o: any): o is _90.ValidatorSetAmino;
            encode(message: _90.ValidatorSet, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _90.ValidatorSet;
            fromPartial(object: import("../helpers").DeepPartial<_90.ValidatorSet>): _90.ValidatorSet;
            fromAmino(object: _90.ValidatorSetAmino): _90.ValidatorSet;
            toAmino(message: _90.ValidatorSet): _90.ValidatorSetAmino;
            fromAminoMsg(object: _90.ValidatorSetAminoMsg): _90.ValidatorSet;
            fromProtoMsg(message: _90.ValidatorSetProtoMsg): _90.ValidatorSet;
            toProto(message: _90.ValidatorSet): Uint8Array;
            toProtoMsg(message: _90.ValidatorSet): _90.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _90.Validator;
            isSDK(o: any): o is _90.ValidatorSDKType;
            isAmino(o: any): o is _90.ValidatorAmino;
            encode(message: _90.Validator, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _90.Validator;
            fromPartial(object: import("../helpers").DeepPartial<_90.Validator>): _90.Validator;
            fromAmino(object: _90.ValidatorAmino): _90.Validator;
            toAmino(message: _90.Validator): _90.ValidatorAmino;
            fromAminoMsg(object: _90.ValidatorAminoMsg): _90.Validator;
            fromProtoMsg(message: _90.ValidatorProtoMsg): _90.Validator;
            toProto(message: _90.Validator): Uint8Array;
            toProtoMsg(message: _90.Validator): _90.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            is(o: any): o is _90.SimpleValidator;
            isSDK(o: any): o is _90.SimpleValidatorSDKType;
            isAmino(o: any): o is _90.SimpleValidatorAmino;
            encode(message: _90.SimpleValidator, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _90.SimpleValidator;
            fromPartial(object: import("../helpers").DeepPartial<_90.SimpleValidator>): _90.SimpleValidator;
            fromAmino(object: _90.SimpleValidatorAmino): _90.SimpleValidator;
            toAmino(message: _90.SimpleValidator): _90.SimpleValidatorAmino;
            fromAminoMsg(object: _90.SimpleValidatorAminoMsg): _90.SimpleValidator;
            fromProtoMsg(message: _90.SimpleValidatorProtoMsg): _90.SimpleValidator;
            toProto(message: _90.SimpleValidator): Uint8Array;
            toProtoMsg(message: _90.SimpleValidator): _90.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _89.BlockIDFlag;
        blockIDFlagToJSON(object: _89.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _89.SignedMsgType;
        signedMsgTypeToJSON(object: _89.SignedMsgType): string;
        BlockIDFlag: typeof _89.BlockIDFlag;
        BlockIDFlagSDKType: typeof _89.BlockIDFlag;
        BlockIDFlagAmino: typeof _89.BlockIDFlag;
        SignedMsgType: typeof _89.SignedMsgType;
        SignedMsgTypeSDKType: typeof _89.SignedMsgType;
        SignedMsgTypeAmino: typeof _89.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            is(o: any): o is _89.PartSetHeader;
            isSDK(o: any): o is _89.PartSetHeaderSDKType;
            isAmino(o: any): o is _89.PartSetHeaderAmino;
            encode(message: _89.PartSetHeader, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.PartSetHeader;
            fromPartial(object: import("../helpers").DeepPartial<_89.PartSetHeader>): _89.PartSetHeader;
            fromAmino(object: _89.PartSetHeaderAmino): _89.PartSetHeader;
            toAmino(message: _89.PartSetHeader): _89.PartSetHeaderAmino;
            fromAminoMsg(object: _89.PartSetHeaderAminoMsg): _89.PartSetHeader;
            fromProtoMsg(message: _89.PartSetHeaderProtoMsg): _89.PartSetHeader;
            toProto(message: _89.PartSetHeader): Uint8Array;
            toProtoMsg(message: _89.PartSetHeader): _89.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            is(o: any): o is _89.Part;
            isSDK(o: any): o is _89.PartSDKType;
            isAmino(o: any): o is _89.PartAmino;
            encode(message: _89.Part, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.Part;
            fromPartial(object: import("../helpers").DeepPartial<_89.Part>): _89.Part;
            fromAmino(object: _89.PartAmino): _89.Part;
            toAmino(message: _89.Part): _89.PartAmino;
            fromAminoMsg(object: _89.PartAminoMsg): _89.Part;
            fromProtoMsg(message: _89.PartProtoMsg): _89.Part;
            toProto(message: _89.Part): Uint8Array;
            toProtoMsg(message: _89.Part): _89.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            is(o: any): o is _89.BlockID;
            isSDK(o: any): o is _89.BlockIDSDKType;
            isAmino(o: any): o is _89.BlockIDAmino;
            encode(message: _89.BlockID, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.BlockID;
            fromPartial(object: import("../helpers").DeepPartial<_89.BlockID>): _89.BlockID;
            fromAmino(object: _89.BlockIDAmino): _89.BlockID;
            toAmino(message: _89.BlockID): _89.BlockIDAmino;
            fromAminoMsg(object: _89.BlockIDAminoMsg): _89.BlockID;
            fromProtoMsg(message: _89.BlockIDProtoMsg): _89.BlockID;
            toProto(message: _89.BlockID): Uint8Array;
            toProtoMsg(message: _89.BlockID): _89.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            is(o: any): o is _89.Header;
            isSDK(o: any): o is _89.HeaderSDKType;
            isAmino(o: any): o is _89.HeaderAmino;
            encode(message: _89.Header, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.Header;
            fromPartial(object: import("../helpers").DeepPartial<_89.Header>): _89.Header;
            fromAmino(object: _89.HeaderAmino): _89.Header;
            toAmino(message: _89.Header): _89.HeaderAmino;
            fromAminoMsg(object: _89.HeaderAminoMsg): _89.Header;
            fromProtoMsg(message: _89.HeaderProtoMsg): _89.Header;
            toProto(message: _89.Header): Uint8Array;
            toProtoMsg(message: _89.Header): _89.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            is(o: any): o is _89.Data;
            isSDK(o: any): o is _89.DataSDKType;
            isAmino(o: any): o is _89.DataAmino;
            encode(message: _89.Data, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.Data;
            fromPartial(object: import("../helpers").DeepPartial<_89.Data>): _89.Data;
            fromAmino(object: _89.DataAmino): _89.Data;
            toAmino(message: _89.Data): _89.DataAmino;
            fromAminoMsg(object: _89.DataAminoMsg): _89.Data;
            fromProtoMsg(message: _89.DataProtoMsg): _89.Data;
            toProto(message: _89.Data): Uint8Array;
            toProtoMsg(message: _89.Data): _89.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            is(o: any): o is _89.Vote;
            isSDK(o: any): o is _89.VoteSDKType;
            isAmino(o: any): o is _89.VoteAmino;
            encode(message: _89.Vote, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.Vote;
            fromPartial(object: import("../helpers").DeepPartial<_89.Vote>): _89.Vote;
            fromAmino(object: _89.VoteAmino): _89.Vote;
            toAmino(message: _89.Vote): _89.VoteAmino;
            fromAminoMsg(object: _89.VoteAminoMsg): _89.Vote;
            fromProtoMsg(message: _89.VoteProtoMsg): _89.Vote;
            toProto(message: _89.Vote): Uint8Array;
            toProtoMsg(message: _89.Vote): _89.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            is(o: any): o is _89.Commit;
            isSDK(o: any): o is _89.CommitSDKType;
            isAmino(o: any): o is _89.CommitAmino;
            encode(message: _89.Commit, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.Commit;
            fromPartial(object: import("../helpers").DeepPartial<_89.Commit>): _89.Commit;
            fromAmino(object: _89.CommitAmino): _89.Commit;
            toAmino(message: _89.Commit): _89.CommitAmino;
            fromAminoMsg(object: _89.CommitAminoMsg): _89.Commit;
            fromProtoMsg(message: _89.CommitProtoMsg): _89.Commit;
            toProto(message: _89.Commit): Uint8Array;
            toProtoMsg(message: _89.Commit): _89.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            is(o: any): o is _89.CommitSig;
            isSDK(o: any): o is _89.CommitSigSDKType;
            isAmino(o: any): o is _89.CommitSigAmino;
            encode(message: _89.CommitSig, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.CommitSig;
            fromPartial(object: import("../helpers").DeepPartial<_89.CommitSig>): _89.CommitSig;
            fromAmino(object: _89.CommitSigAmino): _89.CommitSig;
            toAmino(message: _89.CommitSig): _89.CommitSigAmino;
            fromAminoMsg(object: _89.CommitSigAminoMsg): _89.CommitSig;
            fromProtoMsg(message: _89.CommitSigProtoMsg): _89.CommitSig;
            toProto(message: _89.CommitSig): Uint8Array;
            toProtoMsg(message: _89.CommitSig): _89.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            is(o: any): o is _89.Proposal;
            isSDK(o: any): o is _89.ProposalSDKType;
            isAmino(o: any): o is _89.ProposalAmino;
            encode(message: _89.Proposal, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.Proposal;
            fromPartial(object: import("../helpers").DeepPartial<_89.Proposal>): _89.Proposal;
            fromAmino(object: _89.ProposalAmino): _89.Proposal;
            toAmino(message: _89.Proposal): _89.ProposalAmino;
            fromAminoMsg(object: _89.ProposalAminoMsg): _89.Proposal;
            fromProtoMsg(message: _89.ProposalProtoMsg): _89.Proposal;
            toProto(message: _89.Proposal): Uint8Array;
            toProtoMsg(message: _89.Proposal): _89.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            is(o: any): o is _89.SignedHeader;
            isSDK(o: any): o is _89.SignedHeaderSDKType;
            isAmino(o: any): o is _89.SignedHeaderAmino;
            encode(message: _89.SignedHeader, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.SignedHeader;
            fromPartial(object: import("../helpers").DeepPartial<_89.SignedHeader>): _89.SignedHeader;
            fromAmino(object: _89.SignedHeaderAmino): _89.SignedHeader;
            toAmino(message: _89.SignedHeader): _89.SignedHeaderAmino;
            fromAminoMsg(object: _89.SignedHeaderAminoMsg): _89.SignedHeader;
            fromProtoMsg(message: _89.SignedHeaderProtoMsg): _89.SignedHeader;
            toProto(message: _89.SignedHeader): Uint8Array;
            toProtoMsg(message: _89.SignedHeader): _89.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            is(o: any): o is _89.LightBlock;
            isSDK(o: any): o is _89.LightBlockSDKType;
            isAmino(o: any): o is _89.LightBlockAmino;
            encode(message: _89.LightBlock, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.LightBlock;
            fromPartial(object: import("../helpers").DeepPartial<_89.LightBlock>): _89.LightBlock;
            fromAmino(object: _89.LightBlockAmino): _89.LightBlock;
            toAmino(message: _89.LightBlock): _89.LightBlockAmino;
            fromAminoMsg(object: _89.LightBlockAminoMsg): _89.LightBlock;
            fromProtoMsg(message: _89.LightBlockProtoMsg): _89.LightBlock;
            toProto(message: _89.LightBlock): Uint8Array;
            toProtoMsg(message: _89.LightBlock): _89.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            is(o: any): o is _89.BlockMeta;
            isSDK(o: any): o is _89.BlockMetaSDKType;
            isAmino(o: any): o is _89.BlockMetaAmino;
            encode(message: _89.BlockMeta, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.BlockMeta;
            fromPartial(object: import("../helpers").DeepPartial<_89.BlockMeta>): _89.BlockMeta;
            fromAmino(object: _89.BlockMetaAmino): _89.BlockMeta;
            toAmino(message: _89.BlockMeta): _89.BlockMetaAmino;
            fromAminoMsg(object: _89.BlockMetaAminoMsg): _89.BlockMeta;
            fromProtoMsg(message: _89.BlockMetaProtoMsg): _89.BlockMeta;
            toProto(message: _89.BlockMeta): Uint8Array;
            toProtoMsg(message: _89.BlockMeta): _89.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            is(o: any): o is _89.TxProof;
            isSDK(o: any): o is _89.TxProofSDKType;
            isAmino(o: any): o is _89.TxProofAmino;
            encode(message: _89.TxProof, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _89.TxProof;
            fromPartial(object: import("../helpers").DeepPartial<_89.TxProof>): _89.TxProof;
            fromAmino(object: _89.TxProofAmino): _89.TxProof;
            toAmino(message: _89.TxProof): _89.TxProofAmino;
            fromAminoMsg(object: _89.TxProofAminoMsg): _89.TxProof;
            fromProtoMsg(message: _89.TxProofProtoMsg): _89.TxProof;
            toProto(message: _89.TxProof): Uint8Array;
            toProtoMsg(message: _89.TxProof): _89.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _88.ConsensusParams;
            isSDK(o: any): o is _88.ConsensusParamsSDKType;
            isAmino(o: any): o is _88.ConsensusParamsAmino;
            encode(message: _88.ConsensusParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _88.ConsensusParams;
            fromPartial(object: import("../helpers").DeepPartial<_88.ConsensusParams>): _88.ConsensusParams;
            fromAmino(object: _88.ConsensusParamsAmino): _88.ConsensusParams;
            toAmino(message: _88.ConsensusParams): _88.ConsensusParamsAmino;
            fromAminoMsg(object: _88.ConsensusParamsAminoMsg): _88.ConsensusParams;
            fromProtoMsg(message: _88.ConsensusParamsProtoMsg): _88.ConsensusParams;
            toProto(message: _88.ConsensusParams): Uint8Array;
            toProtoMsg(message: _88.ConsensusParams): _88.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _88.BlockParams;
            isSDK(o: any): o is _88.BlockParamsSDKType;
            isAmino(o: any): o is _88.BlockParamsAmino;
            encode(message: _88.BlockParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _88.BlockParams;
            fromPartial(object: import("../helpers").DeepPartial<_88.BlockParams>): _88.BlockParams;
            fromAmino(object: _88.BlockParamsAmino): _88.BlockParams;
            toAmino(message: _88.BlockParams): _88.BlockParamsAmino;
            fromAminoMsg(object: _88.BlockParamsAminoMsg): _88.BlockParams;
            fromProtoMsg(message: _88.BlockParamsProtoMsg): _88.BlockParams;
            toProto(message: _88.BlockParams): Uint8Array;
            toProtoMsg(message: _88.BlockParams): _88.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            is(o: any): o is _88.EvidenceParams;
            isSDK(o: any): o is _88.EvidenceParamsSDKType;
            isAmino(o: any): o is _88.EvidenceParamsAmino;
            encode(message: _88.EvidenceParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _88.EvidenceParams;
            fromPartial(object: import("../helpers").DeepPartial<_88.EvidenceParams>): _88.EvidenceParams;
            fromAmino(object: _88.EvidenceParamsAmino): _88.EvidenceParams;
            toAmino(message: _88.EvidenceParams): _88.EvidenceParamsAmino;
            fromAminoMsg(object: _88.EvidenceParamsAminoMsg): _88.EvidenceParams;
            fromProtoMsg(message: _88.EvidenceParamsProtoMsg): _88.EvidenceParams;
            toProto(message: _88.EvidenceParams): Uint8Array;
            toProtoMsg(message: _88.EvidenceParams): _88.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            is(o: any): o is _88.ValidatorParams;
            isSDK(o: any): o is _88.ValidatorParamsSDKType;
            isAmino(o: any): o is _88.ValidatorParamsAmino;
            encode(message: _88.ValidatorParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _88.ValidatorParams;
            fromPartial(object: import("../helpers").DeepPartial<_88.ValidatorParams>): _88.ValidatorParams;
            fromAmino(object: _88.ValidatorParamsAmino): _88.ValidatorParams;
            toAmino(message: _88.ValidatorParams): _88.ValidatorParamsAmino;
            fromAminoMsg(object: _88.ValidatorParamsAminoMsg): _88.ValidatorParams;
            fromProtoMsg(message: _88.ValidatorParamsProtoMsg): _88.ValidatorParams;
            toProto(message: _88.ValidatorParams): Uint8Array;
            toProtoMsg(message: _88.ValidatorParams): _88.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            is(o: any): o is _88.VersionParams;
            isSDK(o: any): o is _88.VersionParamsSDKType;
            isAmino(o: any): o is _88.VersionParamsAmino;
            encode(message: _88.VersionParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _88.VersionParams;
            fromPartial(object: import("../helpers").DeepPartial<_88.VersionParams>): _88.VersionParams;
            fromAmino(object: _88.VersionParamsAmino): _88.VersionParams;
            toAmino(message: _88.VersionParams): _88.VersionParamsAmino;
            fromAminoMsg(object: _88.VersionParamsAminoMsg): _88.VersionParams;
            fromProtoMsg(message: _88.VersionParamsProtoMsg): _88.VersionParams;
            toProto(message: _88.VersionParams): Uint8Array;
            toProtoMsg(message: _88.VersionParams): _88.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            is(o: any): o is _88.HashedParams;
            isSDK(o: any): o is _88.HashedParamsSDKType;
            isAmino(o: any): o is _88.HashedParamsAmino;
            encode(message: _88.HashedParams, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _88.HashedParams;
            fromPartial(object: import("../helpers").DeepPartial<_88.HashedParams>): _88.HashedParams;
            fromAmino(object: _88.HashedParamsAmino): _88.HashedParams;
            toAmino(message: _88.HashedParams): _88.HashedParamsAmino;
            fromAminoMsg(object: _88.HashedParamsAminoMsg): _88.HashedParams;
            fromProtoMsg(message: _88.HashedParamsProtoMsg): _88.HashedParams;
            toProto(message: _88.HashedParams): Uint8Array;
            toProtoMsg(message: _88.HashedParams): _88.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _87.Evidence;
            isSDK(o: any): o is _87.EvidenceSDKType;
            isAmino(o: any): o is _87.EvidenceAmino;
            encode(message: _87.Evidence, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _87.Evidence;
            fromPartial(object: import("../helpers").DeepPartial<_87.Evidence>): _87.Evidence;
            fromAmino(object: _87.EvidenceAmino): _87.Evidence;
            toAmino(message: _87.Evidence): _87.EvidenceAmino;
            fromAminoMsg(object: _87.EvidenceAminoMsg): _87.Evidence;
            fromProtoMsg(message: _87.EvidenceProtoMsg): _87.Evidence;
            toProto(message: _87.Evidence): Uint8Array;
            toProtoMsg(message: _87.Evidence): _87.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            is(o: any): o is _87.DuplicateVoteEvidence;
            isSDK(o: any): o is _87.DuplicateVoteEvidenceSDKType;
            isAmino(o: any): o is _87.DuplicateVoteEvidenceAmino;
            encode(message: _87.DuplicateVoteEvidence, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _87.DuplicateVoteEvidence;
            fromPartial(object: import("../helpers").DeepPartial<_87.DuplicateVoteEvidence>): _87.DuplicateVoteEvidence;
            fromAmino(object: _87.DuplicateVoteEvidenceAmino): _87.DuplicateVoteEvidence;
            toAmino(message: _87.DuplicateVoteEvidence): _87.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _87.DuplicateVoteEvidenceAminoMsg): _87.DuplicateVoteEvidence;
            fromProtoMsg(message: _87.DuplicateVoteEvidenceProtoMsg): _87.DuplicateVoteEvidence;
            toProto(message: _87.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _87.DuplicateVoteEvidence): _87.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            is(o: any): o is _87.LightClientAttackEvidence;
            isSDK(o: any): o is _87.LightClientAttackEvidenceSDKType;
            isAmino(o: any): o is _87.LightClientAttackEvidenceAmino;
            encode(message: _87.LightClientAttackEvidence, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _87.LightClientAttackEvidence;
            fromPartial(object: import("../helpers").DeepPartial<_87.LightClientAttackEvidence>): _87.LightClientAttackEvidence;
            fromAmino(object: _87.LightClientAttackEvidenceAmino): _87.LightClientAttackEvidence;
            toAmino(message: _87.LightClientAttackEvidence): _87.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _87.LightClientAttackEvidenceAminoMsg): _87.LightClientAttackEvidence;
            fromProtoMsg(message: _87.LightClientAttackEvidenceProtoMsg): _87.LightClientAttackEvidence;
            toProto(message: _87.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _87.LightClientAttackEvidence): _87.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            is(o: any): o is _87.EvidenceList;
            isSDK(o: any): o is _87.EvidenceListSDKType;
            isAmino(o: any): o is _87.EvidenceListAmino;
            encode(message: _87.EvidenceList, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _87.EvidenceList;
            fromPartial(object: import("../helpers").DeepPartial<_87.EvidenceList>): _87.EvidenceList;
            fromAmino(object: _87.EvidenceListAmino): _87.EvidenceList;
            toAmino(message: _87.EvidenceList): _87.EvidenceListAmino;
            fromAminoMsg(object: _87.EvidenceListAminoMsg): _87.EvidenceList;
            fromProtoMsg(message: _87.EvidenceListProtoMsg): _87.EvidenceList;
            toProto(message: _87.EvidenceList): Uint8Array;
            toProtoMsg(message: _87.EvidenceList): _87.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            is(o: any): o is _86.Block;
            isSDK(o: any): o is _86.BlockSDKType;
            isAmino(o: any): o is _86.BlockAmino;
            encode(message: _86.Block, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _86.Block;
            fromPartial(object: import("../helpers").DeepPartial<_86.Block>): _86.Block;
            fromAmino(object: _86.BlockAmino): _86.Block;
            toAmino(message: _86.Block): _86.BlockAmino;
            fromAminoMsg(object: _86.BlockAminoMsg): _86.Block;
            fromProtoMsg(message: _86.BlockProtoMsg): _86.Block;
            toProto(message: _86.Block): Uint8Array;
            toProtoMsg(message: _86.Block): _86.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            is(o: any): o is _91.App;
            isSDK(o: any): o is _91.AppSDKType;
            isAmino(o: any): o is _91.AppAmino;
            encode(message: _91.App, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _91.App;
            fromPartial(object: import("../helpers").DeepPartial<_91.App>): _91.App;
            fromAmino(object: _91.AppAmino): _91.App;
            toAmino(message: _91.App): _91.AppAmino;
            fromAminoMsg(object: _91.AppAminoMsg): _91.App;
            fromProtoMsg(message: _91.AppProtoMsg): _91.App;
            toProto(message: _91.App): Uint8Array;
            toProtoMsg(message: _91.App): _91.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            is(o: any): o is _91.Consensus;
            isSDK(o: any): o is _91.ConsensusSDKType;
            isAmino(o: any): o is _91.ConsensusAmino;
            encode(message: _91.Consensus, writer?: import("../index").BinaryWriter): import("../index").BinaryWriter;
            decode(input: import("../index").BinaryReader | Uint8Array, length?: number): _91.Consensus;
            fromPartial(object: import("../helpers").DeepPartial<_91.Consensus>): _91.Consensus;
            fromAmino(object: _91.ConsensusAmino): _91.Consensus;
            toAmino(message: _91.Consensus): _91.ConsensusAmino;
            fromAminoMsg(object: _91.ConsensusAminoMsg): _91.Consensus;
            fromProtoMsg(message: _91.ConsensusProtoMsg): _91.Consensus;
            toProto(message: _91.Consensus): Uint8Array;
            toProtoMsg(message: _91.Consensus): _91.ConsensusProtoMsg;
        };
    };
}
