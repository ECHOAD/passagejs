/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.31.6.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import * as _0 from "./SG721Base.types";
import * as _1 from "./SG721Base.client";
import * as _3 from "./SG721Base.react-query";
import * as _4 from "./SG721Base.provider";
import * as _5 from "./SG721MetadataOnchain.types";
import * as _6 from "./SG721MetadataOnchain.client";
import * as _8 from "./SG721MetadataOnchain.react-query";
import * as _9 from "./SG721MetadataOnchain.provider";
import * as _10 from "./Sg721Updatable.types";
import * as _11 from "./Sg721Updatable.client";
import * as _12 from "./Sg721Updatable.message-composer";
import * as _13 from "./Sg721Updatable.react-query";
import * as _14 from "./Sg721Updatable.provider";
import * as _16 from "./BaseFactory.client";
import * as _17 from "./BaseFactory.message-composer";
import * as _18 from "./BaseFactory.react-query";
import * as _19 from "./BaseFactory.provider";
import * as _21 from "./BaseMinter.client";
import * as _22 from "./BaseMinter.message-composer";
import * as _23 from "./BaseMinter.react-query";
import * as _24 from "./BaseMinter.provider";
import * as _25 from "./VendingMinter.types";
import * as _26 from "./VendingMinter.client";
import * as _27 from "./VendingMinter.message-composer";
import * as _28 from "./VendingMinter.react-query";
import * as _29 from "./VendingMinter.provider";
import * as _30 from "./BadKids.types";
import * as _31 from "./BadKids.client";
import * as _32 from "./BadKids.message-composer";
import * as _33 from "./BadKids.react-query";
import * as _34 from "./BadKids.provider";
import * as _35 from "./Marketplace.types";
import * as _36 from "./Marketplace.client";
import * as _37 from "./Marketplace.message-composer";
import * as _38 from "./Marketplace.react-query";
import * as _39 from "./Marketplace.provider";
export declare namespace contracts {
    const SG721Base: {
        SG721Base: typeof _4.SG721Base;
        useSG721BaseCollectionInfoQuery<TData = _0.CollectionInfoResponse>({ client, options }: _3.SG721BaseCollectionInfoQuery<TData>): any;
        useSG721BaseMinterQuery<TData_1 = _0.MinterResponse>({ client, options }: _3.SG721BaseMinterQuery<TData_1>): any;
        useSG721BaseAllTokensQuery<TData_2 = _0.AllTokensResponse>({ client, args, options }: _3.SG721BaseAllTokensQuery<TData_2>): any;
        useSG721BaseTokensQuery<TData_3 = _0.TokensResponse>({ client, args, options }: _3.SG721BaseTokensQuery<TData_3>): any;
        useSG721BaseAllNftInfoQuery<TData_4 = _0.AllNftInfoResponse>({ client, args, options }: _3.SG721BaseAllNftInfoQuery<TData_4>): any;
        useSG721BaseNftInfoQuery<TData_5 = _0.NftInfoResponse>({ client, args, options }: _3.SG721BaseNftInfoQuery<TData_5>): any;
        useSG721BaseContractInfoQuery<TData_6 = _0.ContractInfoResponse>({ client, options }: _3.SG721BaseContractInfoQuery<TData_6>): any;
        useSG721BaseNumTokensQuery<TData_7 = _0.NumTokensResponse>({ client, options }: _3.SG721BaseNumTokensQuery<TData_7>): any;
        useSG721BaseAllOperatorsQuery<TData_8 = _0.AllOperatorsResponse>({ client, args, options }: _3.SG721BaseAllOperatorsQuery<TData_8>): any;
        useSG721BaseApprovalsQuery<TData_9 = _0.ApprovalsResponse>({ client, args, options }: _3.SG721BaseApprovalsQuery<TData_9>): any;
        useSG721BaseApprovalQuery<TData_10 = _0.ApprovalResponse>({ client, args, options }: _3.SG721BaseApprovalQuery<TData_10>): any;
        useSG721BaseOwnerOfQuery<TData_11 = _0.OwnerOfResponse>({ client, args, options }: _3.SG721BaseOwnerOfQuery<TData_11>): any;
        SG721BaseQueryClient: typeof _1.SG721BaseQueryClient;
    };
    const SG721MetadataOnchain: {
        SG721MetadataOnchain: typeof _9.SG721MetadataOnchain;
        useSG721MetadataOnchainCollectionInfoQuery<TData = _5.CollectionInfoResponse>({ client, options }: _8.SG721MetadataOnchainCollectionInfoQuery<TData>): any;
        useSG721MetadataOnchainMinterQuery<TData_1 = _5.MinterResponse>({ client, options }: _8.SG721MetadataOnchainMinterQuery<TData_1>): any;
        useSG721MetadataOnchainAllTokensQuery<TData_2 = _5.AllTokensResponse>({ client, args, options }: _8.SG721MetadataOnchainAllTokensQuery<TData_2>): any;
        useSG721MetadataOnchainTokensQuery<TData_3 = _5.TokensResponse>({ client, args, options }: _8.SG721MetadataOnchainTokensQuery<TData_3>): any;
        useSG721MetadataOnchainAllNftInfoQuery<TData_4 = _5.AllNftInfoResponse>({ client, args, options }: _8.SG721MetadataOnchainAllNftInfoQuery<TData_4>): any;
        useSG721MetadataOnchainNftInfoQuery<TData_5 = _5.NftInfoResponse>({ client, args, options }: _8.SG721MetadataOnchainNftInfoQuery<TData_5>): any;
        useSG721MetadataOnchainContractInfoQuery<TData_6 = _5.ContractInfoResponse>({ client, options }: _8.SG721MetadataOnchainContractInfoQuery<TData_6>): any;
        useSG721MetadataOnchainNumTokensQuery<TData_7 = _5.NumTokensResponse>({ client, options }: _8.SG721MetadataOnchainNumTokensQuery<TData_7>): any;
        useSG721MetadataOnchainAllOperatorsQuery<TData_8 = _5.AllOperatorsResponse>({ client, args, options }: _8.SG721MetadataOnchainAllOperatorsQuery<TData_8>): any;
        useSG721MetadataOnchainApprovalsQuery<TData_9 = _5.ApprovalsResponse>({ client, args, options }: _8.SG721MetadataOnchainApprovalsQuery<TData_9>): any;
        useSG721MetadataOnchainApprovalQuery<TData_10 = _5.ApprovalResponse>({ client, args, options }: _8.SG721MetadataOnchainApprovalQuery<TData_10>): any;
        useSG721MetadataOnchainOwnerOfQuery<TData_11 = _5.OwnerOfResponse>({ client, args, options }: _8.SG721MetadataOnchainOwnerOfQuery<TData_11>): any;
        SG721MetadataOnchainQueryClient: typeof _6.SG721MetadataOnchainQueryClient;
    };
    const Sg721Updatable: {
        Sg721Updatable: typeof _14.Sg721Updatable;
        useSg721UpdatableCollectionInfoQuery<TData = _10.CollectionInfoResponse>({ client, options }: _13.Sg721UpdatableCollectionInfoQuery<TData>): any;
        useSg721UpdatableMinterQuery<TData_1 = _10.MinterResponse>({ client, options }: _13.Sg721UpdatableMinterQuery<TData_1>): any;
        useSg721UpdatableAllTokensQuery<TData_2 = _10.AllTokensResponse>({ client, args, options }: _13.Sg721UpdatableAllTokensQuery<TData_2>): any;
        useSg721UpdatableTokensQuery<TData_3 = _10.TokensResponse>({ client, args, options }: _13.Sg721UpdatableTokensQuery<TData_3>): any;
        useSg721UpdatableAllNftInfoQuery<TData_4 = _10.AllNftInfoResponse>({ client, args, options }: _13.Sg721UpdatableAllNftInfoQuery<TData_4>): any;
        useSg721UpdatableNftInfoQuery<TData_5 = _10.NftInfoResponse>({ client, args, options }: _13.Sg721UpdatableNftInfoQuery<TData_5>): any;
        useSg721UpdatableContractInfoQuery<TData_6 = _10.ContractInfoResponse>({ client, options }: _13.Sg721UpdatableContractInfoQuery<TData_6>): any;
        useSg721UpdatableNumTokensQuery<TData_7 = _10.NumTokensResponse>({ client, options }: _13.Sg721UpdatableNumTokensQuery<TData_7>): any;
        useSg721UpdatableAllOperatorsQuery<TData_8 = _10.AllOperatorsResponse>({ client, args, options }: _13.Sg721UpdatableAllOperatorsQuery<TData_8>): any;
        useSg721UpdatableApprovalsQuery<TData_9 = _10.ApprovalsResponse>({ client, args, options }: _13.Sg721UpdatableApprovalsQuery<TData_9>): any;
        useSg721UpdatableApprovalQuery<TData_10 = _10.ApprovalResponse>({ client, args, options }: _13.Sg721UpdatableApprovalQuery<TData_10>): any;
        useSg721UpdatableOwnerOfQuery<TData_11 = _10.OwnerOfResponse>({ client, args, options }: _13.Sg721UpdatableOwnerOfQuery<TData_11>): any;
        useSg721UpdatableExtensionMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableExtensionMutation>, "mutationFn">): any;
        useSg721UpdatableMintMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableMintMutation>, "mutationFn">): any;
        useSg721UpdatableFreezeCollectionInfoMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableFreezeCollectionInfoMutation>, "mutationFn">): any;
        useSg721UpdatableUpdateTradingStartTimeMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableUpdateTradingStartTimeMutation>, "mutationFn">): any;
        useSg721UpdatableUpdateCollectionInfoMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableUpdateCollectionInfoMutation>, "mutationFn">): any;
        useSg721UpdatableBurnMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableBurnMutation>, "mutationFn">): any;
        useSg721UpdatableRevokeAllMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableRevokeAllMutation>, "mutationFn">): any;
        useSg721UpdatableApproveAllMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableApproveAllMutation>, "mutationFn">): any;
        useSg721UpdatableRevokeMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableRevokeMutation>, "mutationFn">): any;
        useSg721UpdatableApproveMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableApproveMutation>, "mutationFn">): any;
        useSg721UpdatableSendNftMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableSendNftMutation>, "mutationFn">): any;
        useSg721UpdatableTransferNftMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableTransferNftMutation>, "mutationFn">): any;
        useSg721UpdatableEnableUpdatableMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableEnableUpdatableMutation>, "mutationFn">): any;
        useSg721UpdatableUpdateTokenMetadataMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableUpdateTokenMetadataMutation>, "mutationFn">): any;
        useSg721UpdatableFreezeTokenMetadataMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _13.Sg721UpdatableFreezeTokenMetadataMutation>, "mutationFn">): any;
        Sg721UpdatableMessageComposer: typeof _12.Sg721UpdatableMessageComposer;
        Sg721UpdatableQueryClient: typeof _11.Sg721UpdatableQueryClient;
        Sg721UpdatableClient: typeof _11.Sg721UpdatableClient;
    };
    const BaseFactory: {
        BaseFactory: typeof _19.BaseFactory;
        useBaseFactoryCreateMinterMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _18.BaseFactoryCreateMinterMutation>, "mutationFn">): any;
        BaseFactoryMessageComposer: typeof _17.BaseFactoryMessageComposer;
        BaseFactoryClient: typeof _16.BaseFactoryClient;
    };
    const BaseMinter: {
        BaseMinter: typeof _24.BaseMinter;
        useBaseMinterUpdateStartTradingTimeMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _23.BaseMinterUpdateStartTradingTimeMutation>, "mutationFn">): any;
        useBaseMinterMintMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _23.BaseMinterMintMutation>, "mutationFn">): any;
        BaseMinterMessageComposer: typeof _22.BaseMinterMessageComposer;
        BaseMinterClient: typeof _21.BaseMinterClient;
    };
    const VendingMinter: {
        VendingMinter: typeof _29.VendingMinter;
        useVendingMinterStatusQuery<TData = _25.StatusResponse>({ client, options }: _28.VendingMinterStatusQuery<TData>): any;
        useVendingMinterMintCountQuery<TData_1 = _25.MintCountResponse>({ client, args, options }: _28.VendingMinterMintCountQuery<TData_1>): any;
        useVendingMinterMintPriceQuery<TData_2 = _25.MintPriceResponse>({ client, options }: _28.VendingMinterMintPriceQuery<TData_2>): any;
        useVendingMinterStartTimeQuery<TData_3 = _25.StartTimeResponse>({ client, options }: _28.VendingMinterStartTimeQuery<TData_3>): any;
        useVendingMinterMintableNumTokensQuery<TData_4 = _25.MintableNumTokensResponse>({ client, options }: _28.VendingMinterMintableNumTokensQuery<TData_4>): any;
        useVendingMinterConfigQuery<TData_5 = _25.ConfigResponse>({ client, options }: _28.VendingMinterConfigQuery<TData_5>): any;
        useVendingMinterRemoveDiscountPriceMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterRemoveDiscountPriceMutation>, "mutationFn">): any;
        useVendingMinterUpdateDiscountPriceMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterUpdateDiscountPriceMutation>, "mutationFn">): any;
        useVendingMinterBurnRemainingMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterBurnRemainingMutation>, "mutationFn">): any;
        useVendingMinterShuffleMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterShuffleMutation>, "mutationFn">): any;
        useVendingMinterMintForMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterMintForMutation>, "mutationFn">): any;
        useVendingMinterMintToMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterMintToMutation>, "mutationFn">): any;
        useVendingMinterUpdatePerAddressLimitMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterUpdatePerAddressLimitMutation>, "mutationFn">): any;
        useVendingMinterUpdateStartTradingTimeMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterUpdateStartTradingTimeMutation>, "mutationFn">): any;
        useVendingMinterUpdateStartTimeMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterUpdateStartTimeMutation>, "mutationFn">): any;
        useVendingMinterUpdateMintPriceMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterUpdateMintPriceMutation>, "mutationFn">): any;
        useVendingMinterPurgeMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterPurgeMutation>, "mutationFn">): any;
        useVendingMinterSetWhitelistMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterSetWhitelistMutation>, "mutationFn">): any;
        useVendingMinterMintMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _28.VendingMinterMintMutation>, "mutationFn">): any;
        VendingMinterMessageComposer: typeof _27.VendingMinterMessageComposer;
        VendingMinterQueryClient: typeof _26.VendingMinterQueryClient;
        VendingMinterClient: typeof _26.VendingMinterClient;
    };
    const BadKids: {
        BadKids: typeof _34.BadKids;
        useBadKidsGetRegisteredQueryQuery<TData = _30.QueryRegisteredQueryResponse>({ client, args, options }: _33.BadKidsGetRegisteredQueryQuery<TData>): any;
        useBadKidsTransferNftQuery<TData_1 = _30.TransferNftResponse>({ client, args, options }: _33.BadKidsTransferNftQuery<TData_1>): any;
        useBadKidsUnlockNftMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _33.BadKidsUnlockNftMutation>, "mutationFn">): any;
        useBadKidsRemoveInterchainQueryMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _33.BadKidsRemoveInterchainQueryMutation>, "mutationFn">): any;
        useBadKidsRegisterTransferNftQueryMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _33.BadKidsRegisterTransferNftQueryMutation>, "mutationFn">): any;
        useBadKidsMintNftMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _33.BadKidsMintNftMutation>, "mutationFn">): any;
        BadKidsMessageComposer: typeof _32.BadKidsMessageComposer;
        BadKidsQueryClient: typeof _31.BadKidsQueryClient;
        BadKidsClient: typeof _31.BadKidsClient;
    };
    const Marketplace: {
        Marketplace: typeof _39.Marketplace;
        useMarketplaceParamsQuery<TData = _35.ParamsResponse>({ client, options }: _38.MarketplaceParamsQuery<TData>): any;
        useMarketplaceSaleHooksQuery<TData_1 = _35.HooksResponse>({ client, options }: _38.MarketplaceSaleHooksQuery<TData_1>): any;
        useMarketplaceBidHooksQuery<TData_2 = _35.HooksResponse>({ client, options }: _38.MarketplaceBidHooksQuery<TData_2>): any;
        useMarketplaceAskHooksQuery<TData_3 = _35.HooksResponse>({ client, options }: _38.MarketplaceAskHooksQuery<TData_3>): any;
        useMarketplaceReverseCollectionBidsSortedByPriceQuery<TData_4 = _35.CollectionBidResponse>({ client, args, options }: _38.MarketplaceReverseCollectionBidsSortedByPriceQuery<TData_4>): any;
        useMarketplaceCollectionBidsSortedByPriceQuery<TData_5 = _35.CollectionBidResponse>({ client, args, options }: _38.MarketplaceCollectionBidsSortedByPriceQuery<TData_5>): any;
        useMarketplaceCollectionBidsByBidderSortedByExpirationQuery<TData_6 = _35.CollectionBidResponse>({ client, args, options }: _38.MarketplaceCollectionBidsByBidderSortedByExpirationQuery<TData_6>): any;
        useMarketplaceCollectionBidsByBidderQuery<TData_7 = _35.CollectionBidResponse>({ client, args, options }: _38.MarketplaceCollectionBidsByBidderQuery<TData_7>): any;
        useMarketplaceCollectionBidQuery<TData_8 = _35.CollectionBidResponse>({ client, args, options }: _38.MarketplaceCollectionBidQuery<TData_8>): any;
        useMarketplaceReverseBidsSortedByPriceQuery<TData_9 = _35.BidsResponse>({ client, args, options }: _38.MarketplaceReverseBidsSortedByPriceQuery<TData_9>): any;
        useMarketplaceBidsSortedByPriceQuery<TData_10 = _35.BidsResponse>({ client, args, options }: _38.MarketplaceBidsSortedByPriceQuery<TData_10>): any;
        useMarketplaceBidsQuery<TData_11 = _35.BidsResponse>({ client, args, options }: _38.MarketplaceBidsQuery<TData_11>): any;
        useMarketplaceBidsByBidderSortedByExpirationQuery<TData_12 = _35.BidsResponse>({ client, args, options }: _38.MarketplaceBidsByBidderSortedByExpirationQuery<TData_12>): any;
        useMarketplaceBidsByBidderQuery<TData_13 = _35.BidsResponse>({ client, args, options }: _38.MarketplaceBidsByBidderQuery<TData_13>): any;
        useMarketplaceBidQuery<TData_14 = _35.BidResponse>({ client, args, options }: _38.MarketplaceBidQuery<TData_14>): any;
        useMarketplaceAsksBySellerQuery<TData_15 = _35.AsksResponse>({ client, args, options }: _38.MarketplaceAsksBySellerQuery<TData_15>): any;
        useMarketplaceAskCountQuery<TData_16 = _35.AskCountResponse>({ client, args, options }: _38.MarketplaceAskCountQuery<TData_16>): any;
        useMarketplaceReverseAsksSortedByPriceQuery<TData_17 = _35.AsksResponse>({ client, args, options }: _38.MarketplaceReverseAsksSortedByPriceQuery<TData_17>): any;
        useMarketplaceAsksSortedByPriceQuery<TData_18 = _35.AsksResponse>({ client, args, options }: _38.MarketplaceAsksSortedByPriceQuery<TData_18>): any;
        useMarketplaceReverseAsksQuery<TData_19 = _35.AsksResponse>({ client, args, options }: _38.MarketplaceReverseAsksQuery<TData_19>): any;
        useMarketplaceAsksQuery<TData_20 = _35.AsksResponse>({ client, args, options }: _38.MarketplaceAsksQuery<TData_20>): any;
        useMarketplaceAskQuery<TData_21 = _35.AsksResponse>({ client, args, options }: _38.MarketplaceAskQuery<TData_21>): any;
        useMarketplaceCollectionsQuery<TData_22 = _35.CollectionsResponse>({ client, args, options }: _38.MarketplaceCollectionsQuery<TData_22>): any;
        useMarketplaceRemoveStaleCollectionBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRemoveStaleCollectionBidMutation>, "mutationFn">): any;
        useMarketplaceRemoveStaleBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRemoveStaleBidMutation>, "mutationFn">): any;
        useMarketplaceRemoveStaleAskMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRemoveStaleAskMutation>, "mutationFn">): any;
        useMarketplaceSyncAskMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceSyncAskMutation>, "mutationFn">): any;
        useMarketplaceAcceptCollectionBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceAcceptCollectionBidMutation>, "mutationFn">): any;
        useMarketplaceRemoveCollectionBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRemoveCollectionBidMutation>, "mutationFn">): any;
        useMarketplaceSetCollectionBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceSetCollectionBidMutation>, "mutationFn">): any;
        useMarketplaceRejectBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRejectBidMutation>, "mutationFn">): any;
        useMarketplaceAcceptBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceAcceptBidMutation>, "mutationFn">): any;
        useMarketplaceRemoveBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRemoveBidMutation>, "mutationFn">): any;
        useMarketplaceBuyNowMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceBuyNowMutation>, "mutationFn">): any;
        useMarketplaceSetBidMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceSetBidMutation>, "mutationFn">): any;
        useMarketplaceUpdateAskPriceMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceUpdateAskPriceMutation>, "mutationFn">): any;
        useMarketplaceRemoveAskMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceRemoveAskMutation>, "mutationFn">): any;
        useMarketplaceSetAskMutation(options?: Omit<UseMutationOptions<import("@cosmjs/cosmwasm-stargate").ExecuteResult, Error, _38.MarketplaceSetAskMutation>, "mutationFn">): any;
        MarketplaceMessageComposer: typeof _37.MarketplaceMessageComposer;
        MarketplaceQueryClient: typeof _36.MarketplaceQueryClient;
        MarketplaceClient: typeof _36.MarketplaceClient;
    };
}
