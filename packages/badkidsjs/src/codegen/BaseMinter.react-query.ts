/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.31.6.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee } from "@cosmjs/amino";
import { useMutation, UseMutationOptions } from "@tanstack/react-query";
import { Decimal, Timestamp, Uint64, Uint128, InstantiateMsg, CreateMinterMsgForNullable_Empty, CollectionParams, CollectionInfoForRoyaltyInfoResponse, RoyaltyInfoResponse, Empty, MinterParamsForNullable_Empty, Coin, ExecuteMsg } from "./BaseMinter.types";
import { BaseMinterClient } from "./BaseMinter.client";
export interface BaseMinterUpdateStartTradingTimeMutation {
  client: BaseMinterClient;
  args?: {
    fee?: number | StdFee | "auto";
    memo?: string;
    funds?: Coin[];
  };
}
export function useBaseMinterUpdateStartTradingTimeMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, BaseMinterUpdateStartTradingTimeMutation>, "mutationFn">) {
  return useMutation<ExecuteResult, Error, BaseMinterUpdateStartTradingTimeMutation>(({
    client,
    args: {
      fee,
      memo,
      funds
    } = {}
  }) => client.updateStartTradingTime(fee, memo, funds), options);
}
export interface BaseMinterMintMutation {
  client: BaseMinterClient;
  msg: {
    tokenUri: string;
  };
  args?: {
    fee?: number | StdFee | "auto";
    memo?: string;
    funds?: Coin[];
  };
}
export function useBaseMinterMintMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, BaseMinterMintMutation>, "mutationFn">) {
  return useMutation<ExecuteResult, Error, BaseMinterMintMutation>(({
    client,
    msg,
    args: {
      fee,
      memo,
      funds
    } = {}
  }) => client.mint(msg, fee, memo, funds), options);
}