/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { UseQueryOptions, UseMutationOptions } from "@tanstack/react-query";
import { ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { StdFee } from "@cosmjs/amino";
import { AdminResponse, Member, Coin, MemberResponse, TotalWeightResponse } from "./RoyaltyGroup.types";
import { RoyaltyGroupQueryClient, RoyaltyGroupClient } from "./RoyaltyGroup.client";
export interface RoyaltyGroupReactQuery<TResponse, TData = TResponse> {
    client: RoyaltyGroupQueryClient;
    options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface RoyaltyGroupHooksQuery<TData> extends RoyaltyGroupReactQuery<HooksResponse, TData> {
}
export declare function useRoyaltyGroupHooksQuery<TData = HooksResponse>({ client, options }: RoyaltyGroupHooksQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface RoyaltyGroupMemberQuery<TData> extends RoyaltyGroupReactQuery<MemberResponse, TData> {
    args: {
        addr: string;
        atHeight?: number;
    };
}
export declare function useRoyaltyGroupMemberQuery<TData = MemberResponse>({ client, args, options }: RoyaltyGroupMemberQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface RoyaltyGroupListMembersQuery<TData> extends RoyaltyGroupReactQuery<ListMembersResponse, TData> {
    args: {
        limit?: number;
        startAfter?: string;
    };
}
export declare function useRoyaltyGroupListMembersQuery<TData = ListMembersResponse>({ client, args, options }: RoyaltyGroupListMembersQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface RoyaltyGroupTotalWeightQuery<TData> extends RoyaltyGroupReactQuery<TotalWeightResponse, TData> {
}
export declare function useRoyaltyGroupTotalWeightQuery<TData = TotalWeightResponse>({ client, options }: RoyaltyGroupTotalWeightQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface RoyaltyGroupAdminQuery<TData> extends RoyaltyGroupReactQuery<AdminResponse, TData> {
}
export declare function useRoyaltyGroupAdminQuery<TData = AdminResponse>({ client, options }: RoyaltyGroupAdminQuery<TData>): import("@tanstack/react-query").DefinedUseQueryResult<TData, Error>;
export interface RoyaltyGroupDistributeMutation {
    client: RoyaltyGroupClient;
    msg: {
        funds: Coin;
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useRoyaltyGroupDistributeMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, RoyaltyGroupDistributeMutation>, "mutationFn">): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, RoyaltyGroupDistributeMutation, unknown>;
export interface RoyaltyGroupRemoveHookMutation {
    client: RoyaltyGroupClient;
    msg: {
        addr: string;
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useRoyaltyGroupRemoveHookMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, RoyaltyGroupRemoveHookMutation>, "mutationFn">): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, RoyaltyGroupRemoveHookMutation, unknown>;
export interface RoyaltyGroupAddHookMutation {
    client: RoyaltyGroupClient;
    msg: {
        addr: string;
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useRoyaltyGroupAddHookMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, RoyaltyGroupAddHookMutation>, "mutationFn">): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, RoyaltyGroupAddHookMutation, unknown>;
export interface RoyaltyGroupUpdateMembersMutation {
    client: RoyaltyGroupClient;
    msg: {
        add: Member[];
        remove: string[];
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useRoyaltyGroupUpdateMembersMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, RoyaltyGroupUpdateMembersMutation>, "mutationFn">): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, RoyaltyGroupUpdateMembersMutation, unknown>;
export interface RoyaltyGroupUpdateAdminMutation {
    client: RoyaltyGroupClient;
    msg: {
        admin?: string;
    };
    args?: {
        fee?: number | StdFee | "auto";
        memo?: string;
        funds?: Coin[];
    };
}
export declare function useRoyaltyGroupUpdateAdminMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, RoyaltyGroupUpdateAdminMutation>, "mutationFn">): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, RoyaltyGroupUpdateAdminMutation, unknown>;
