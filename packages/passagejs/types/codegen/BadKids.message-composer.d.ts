/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.31.6.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { MsgExecuteContractEncodeObject } from "@cosmjs/cosmwasm-stargate";
import { Coin } from "./BadKids.types";
export interface BadKidsMessage {
    contractAddress: string;
    sender: string;
    mintNft: ({ tokenId }: {
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    registerTransferNftQuery: ({ connectionId, contractAddress, minHeight, recipient, sender, tokenId, updatePeriod }: {
        connectionId: string;
        contractAddress: string;
        minHeight: number;
        recipient: string;
        sender: string;
        tokenId: string;
        updatePeriod: number;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeInterchainQuery: ({ queryId }: {
        queryId: number;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    unlockNft: ({ destination, tokenId }: {
        destination: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class BadKidsMessageComposer implements BadKidsMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    mintNft: ({ tokenId }: {
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    registerTransferNftQuery: ({ connectionId, contractAddress, minHeight, recipient, sender, tokenId, updatePeriod }: {
        connectionId: string;
        contractAddress: string;
        minHeight: number;
        recipient: string;
        sender: string;
        tokenId: string;
        updatePeriod: number;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeInterchainQuery: ({ queryId }: {
        queryId: number;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
    unlockNft: ({ destination, tokenId }: {
        destination: string;
        tokenId: string;
    }, _funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
